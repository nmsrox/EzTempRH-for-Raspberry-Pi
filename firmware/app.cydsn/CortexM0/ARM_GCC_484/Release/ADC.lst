ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 4


  32              		.loc 1 140 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 141 0
  38 000a 2049     		ldr	r1, .L5
  39 000c 0E20     		mov	r0, #14
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 145 0
  43 0012 1F4B     		ldr	r3, .L5+4
  44 0014 0122     		mov	r2, #1
  45 0016 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  46              		.loc 1 146 0
  47 0018 1E4A     		ldr	r2, .L5+8
 147:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  48              		.loc 1 148 0
  49 001a 1F4B     		ldr	r3, .L5+12
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 146 0
  51 001c 1168     		ldr	r1, [r2]
  52              		.loc 1 148 0
  53 001e 1B68     		ldr	r3, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 146 0
  55 0020 002B     		cmp	r3, #0
  56 0022 01DA     		bge	.L3
  57 0024 1D4B     		ldr	r3, .L5+16
  58 0026 00E0     		b	.L2
  59              	.L3:
  60 0028 1D4B     		ldr	r3, .L5+20
  61              	.L2:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 146 0 is_stmt 0 discriminator 3
  63 002a 0B43     		orr	r3, r1
  64 002c 1360     		str	r3, [r2]
 149:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  65              		.loc 1 150 0 is_stmt 1 discriminator 3
  66 002e 1D4A     		ldr	r2, .L5+24
  67 0030 1D4B     		ldr	r3, .L5+28
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  68              		.loc 1 153 0 discriminator 3
  69 0032 1E49     		ldr	r1, .L5+32
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  70              		.loc 1 150 0 discriminator 3
  71 0034 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 5


 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  72              		.loc 1 151 0 discriminator 3
  73 0036 1E4A     		ldr	r2, .L5+36
  74 0038 1E4B     		ldr	r3, .L5+40
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 155:.\Generated_Source\PSoC4/ADC.c ****     
 156:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 162:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC.c **** 
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 168:.\Generated_Source\PSoC4/ADC.c **** 
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 171:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC.c **** 
 173:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 182:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC.c ****     #else
 184:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #else
 188:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 189:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 190:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC.c ****     
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC.c **** 
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 201:.\Generated_Source\PSoC4/ADC.c ****     {
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 203:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 205:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC.c ****         
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 6


 207:.\Generated_Source\PSoC4/ADC.c ****         
 208:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC.c ****         */
 212:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC.c ****         {
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 222:.\Generated_Source\PSoC4/ADC.c **** 
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 224:.\Generated_Source\PSoC4/ADC.c ****             {
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 229:.\Generated_Source\PSoC4/ADC.c ****             {
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 231:.\Generated_Source\PSoC4/ADC.c ****             }
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC.c ****             else
 235:.\Generated_Source\PSoC4/ADC.c ****             {
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****                 {
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC.c ****                 }
 242:.\Generated_Source\PSoC4/ADC.c **** 
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 244:.\Generated_Source\PSoC4/ADC.c ****                 {
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC.c ****                 }
 247:.\Generated_Source\PSoC4/ADC.c ****             }
 248:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 249:.\Generated_Source\PSoC4/ADC.c **** 
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 251:.\Generated_Source\PSoC4/ADC.c ****         {
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 253:.\Generated_Source\PSoC4/ADC.c ****         }
 254:.\Generated_Source\PSoC4/ADC.c ****         else
 255:.\Generated_Source\PSoC4/ADC.c ****         {
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 257:.\Generated_Source\PSoC4/ADC.c ****         }
 258:.\Generated_Source\PSoC4/ADC.c **** 
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 260:.\Generated_Source\PSoC4/ADC.c ****         {
 261:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 7


 264:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC.c ****             #else
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 267:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC.c ****         }
 269:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC.c ****         {
 271:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC.c ****             #else
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 276:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:.\Generated_Source\PSoC4/ADC.c ****         }
 278:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 280:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 281:.\Generated_Source\PSoC4/ADC.c ****     }
 282:.\Generated_Source\PSoC4/ADC.c **** }
  75              		.loc 1 282 0 discriminator 3
  76              		@ sp needed
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  77              		.loc 1 151 0 discriminator 3
  78 003a 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  79              		.loc 1 152 0 discriminator 3
  80 003c 1E4A     		ldr	r2, .L5+44
  81 003e 0023     		mov	r3, #0
  82 0040 1360     		str	r3, [r2]
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  83              		.loc 1 153 0 discriminator 3
  84 0042 1E4A     		ldr	r2, .L5+48
  85 0044 1160     		str	r1, [r2]
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  86              		.loc 1 154 0 discriminator 3
  87 0046 1E49     		ldr	r1, .L5+52
  88 0048 1E4A     		ldr	r2, .L5+56
  89 004a 1160     		str	r1, [r2]
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  90              		.loc 1 158 0 discriminator 3
  91 004c 1E4A     		ldr	r2, .L5+60
  92 004e 8021     		mov	r1, #128
  93 0050 1068     		ldr	r0, [r2]
  94 0052 4902     		lsl	r1, r1, #9
  95 0054 0143     		orr	r1, r0
  96 0056 1160     		str	r1, [r2]
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  97              		.loc 1 165 0 discriminator 3
  98 0058 1C4A     		ldr	r2, .L5+64
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  99              		.loc 1 167 0 discriminator 3
 100 005a 0121     		mov	r1, #1
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 101              		.loc 1 165 0 discriminator 3
 102 005c 1360     		str	r3, [r2]
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 103              		.loc 1 166 0 discriminator 3
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 8


 104 005e 1C4A     		ldr	r2, .L5+68
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 105              		.loc 1 170 0 discriminator 3
 106 0060 0220     		mov	r0, #2
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 107              		.loc 1 166 0 discriminator 3
 108 0062 1360     		str	r3, [r2]
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 109              		.loc 1 167 0 discriminator 3
 110 0064 1B4A     		ldr	r2, .L5+72
 111 0066 1160     		str	r1, [r2]
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 112              		.loc 1 170 0 discriminator 3
 113 0068 1B4A     		ldr	r2, .L5+76
 114 006a 1060     		str	r0, [r2]
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 115              		.loc 1 174 0 discriminator 3
 116 006c 1B4A     		ldr	r2, .L5+80
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 117              		.loc 1 175 0 discriminator 3
 118 006e 1C48     		ldr	r0, .L5+84
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 119              		.loc 1 174 0 discriminator 3
 120 0070 1468     		ldr	r4, [r2]
 121              	.LVL2:
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 122              		.loc 1 175 0 discriminator 3
 123 0072 2040     		and	r0, r4
 124              	.LVL3:
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 125              		.loc 1 181 0 discriminator 3
 126 0074 0143     		orr	r1, r0
 127              	.LVL4:
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 128              		.loc 1 194 0 discriminator 3
 129 0076 1160     		str	r1, [r2]
 130              	.LVL5:
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 131              		.loc 1 221 0 discriminator 3
 132 0078 1A4A     		ldr	r2, .L5+88
 133 007a 8021     		mov	r1, #128
 134 007c C900     		lsl	r1, r1, #3
 135 007e 1160     		str	r1, [r2]
 136              	.LVL6:
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 137              		.loc 1 266 0 discriminator 3
 138 0080 194A     		ldr	r2, .L5+92
 139 0082 1380     		strh	r3, [r2]
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 140              		.loc 1 279 0 discriminator 3
 141 0084 194A     		ldr	r2, .L5+96
 142 0086 1A4B     		ldr	r3, .L5+100
 143 0088 1A60     		str	r2, [r3]
 144              	.LVL7:
 145              		.loc 1 282 0 discriminator 3
 146 008a 10BD     		pop	{r4, pc}
 147              	.L6:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 9


 148              		.align	2
 149              	.L5:
 150 008c 00000000 		.word	ADC_ISR
 151 0090 20001A40 		.word	1075445792
 152 0094 00001A40 		.word	1075445760
 153 0098 80031A40 		.word	1075446656
 154 009c C0021050 		.word	1343226560
 155 00a0 C0020050 		.word	1342177984
 156 00a4 A4000080 		.word	-2147483484
 157 00a8 04001A40 		.word	1075445764
 158 00ac D8000400 		.word	262360
 159 00b0 0000FF07 		.word	134152192
 160 00b4 18001A40 		.word	1075445784
 161 00b8 1C001A40 		.word	1075445788
 162 00bc 10001A40 		.word	1075445776
 163 00c0 04000400 		.word	262148
 164 00c4 14001A40 		.word	1075445780
 165 00c8 00031A40 		.word	1075446528
 166 00cc 28021A40 		.word	1075446312
 167 00d0 38021A40 		.word	1075446328
 168 00d4 18021A40 		.word	1075446296
 169 00d8 000F1A40 		.word	1075449600
 170 00dc 30001A40 		.word	1075445808
 171 00e0 FFFFFFDF 		.word	-536870913
 172 00e4 80001A40 		.word	1075445888
 173 00e8 00000000 		.word	ADC_offset
 174 00ec 204E0000 		.word	20000
 175 00f0 00000000 		.word	ADC_countsPer10Volt
 176              		.cfi_endproc
 177              	.LFE1:
 178              		.size	ADC_Init, .-ADC_Init
 179              		.section	.text.ADC_Enable,"ax",%progbits
 180              		.align	1
 181              		.global	ADC_Enable
 182              		.code	16
 183              		.thumb_func
 184              		.type	ADC_Enable, %function
 185              	ADC_Enable:
 186              	.LFB2:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 289:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC.c **** *
 297:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:.\Generated_Source\PSoC4/ADC.c **** {
 187              		.loc 1 299 0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 10


 188              		.cfi_startproc
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 300:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 193              		.loc 1 300 0
 194 0002 064B     		ldr	r3, .L9
 195 0004 1A68     		ldr	r2, [r3]
 196 0006 002A     		cmp	r2, #0
 197 0008 07DB     		blt	.L7
 301:.\Generated_Source\PSoC4/ADC.c ****     {
 302:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC.c **** 
 304:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 305:.\Generated_Source\PSoC4/ADC.c ****             {
 306:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC.c ****             }
 308:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC.c ****         
 310:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 198              		.loc 1 310 0
 199 000a 1968     		ldr	r1, [r3]
 200 000c 8022     		mov	r2, #128
 201 000e 1206     		lsl	r2, r2, #24
 202 0010 0A43     		orr	r2, r1
 203 0012 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****         
 312:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 204              		.loc 1 313 0
 205 0014 0A20     		mov	r0, #10
 206 0016 FFF7FEFF 		bl	CyDelayUs
 207              	.LVL8:
 208              	.L7:
 314:.\Generated_Source\PSoC4/ADC.c ****     }
 315:.\Generated_Source\PSoC4/ADC.c **** }
 209              		.loc 1 315 0
 210              		@ sp needed
 211 001a 08BD     		pop	{r3, pc}
 212              	.L10:
 213              		.align	2
 214              	.L9:
 215 001c 00001A40 		.word	1075445760
 216              		.cfi_endproc
 217              	.LFE2:
 218              		.size	ADC_Enable, .-ADC_Enable
 219              		.section	.text.ADC_Start,"ax",%progbits
 220              		.align	1
 221              		.global	ADC_Start
 222              		.code	16
 223              		.thumb_func
 224              		.type	ADC_Start, %function
 225              	ADC_Start:
 226              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c **** {
 227              		.loc 1 64 0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 11


 228              		.cfi_startproc
 229 0000 10B5     		push	{r4, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 233              		.loc 1 66 0
 234 0002 054C     		ldr	r4, .L13
 235 0004 2378     		ldrb	r3, [r4]
 236 0006 002B     		cmp	r3, #0
 237 0008 03D1     		bne	.L12
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 238              		.loc 1 68 0
 239 000a FFF7FEFF 		bl	ADC_Init
 240              	.LVL9:
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 241              		.loc 1 69 0
 242 000e 0123     		mov	r3, #1
 243 0010 2370     		strb	r3, [r4]
 244              	.L12:
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 245              		.loc 1 71 0
 246 0012 FFF7FEFF 		bl	ADC_Enable
 247              	.LVL10:
  72:.\Generated_Source\PSoC4/ADC.c **** }
 248              		.loc 1 72 0
 249              		@ sp needed
 250 0016 10BD     		pop	{r4, pc}
 251              	.L14:
 252              		.align	2
 253              	.L13:
 254 0018 00000000 		.word	.LANCHOR0
 255              		.cfi_endproc
 256              	.LFE0:
 257              		.size	ADC_Start, .-ADC_Start
 258              		.section	.text.ADC_Stop,"ax",%progbits
 259              		.align	1
 260              		.global	ADC_Stop
 261              		.code	16
 262              		.thumb_func
 263              		.type	ADC_Stop, %function
 264              	ADC_Stop:
 265              	.LFB3:
 316:.\Generated_Source\PSoC4/ADC.c **** 
 317:.\Generated_Source\PSoC4/ADC.c **** 
 318:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 12


 330:.\Generated_Source\PSoC4/ADC.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC.c **** *
 332:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:.\Generated_Source\PSoC4/ADC.c **** {
 266              		.loc 1 334 0
 267              		.cfi_startproc
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 268              		.loc 1 335 0
 269 0000 024B     		ldr	r3, .L16
 336:.\Generated_Source\PSoC4/ADC.c **** }
 270              		.loc 1 336 0
 271              		@ sp needed
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 272              		.loc 1 335 0
 273 0002 1A68     		ldr	r2, [r3]
 274 0004 5200     		lsl	r2, r2, #1
 275 0006 5208     		lsr	r2, r2, #1
 276 0008 1A60     		str	r2, [r3]
 277              		.loc 1 336 0
 278 000a 7047     		bx	lr
 279              	.L17:
 280              		.align	2
 281              	.L16:
 282 000c 00001A40 		.word	1075445760
 283              		.cfi_endproc
 284              	.LFE3:
 285              		.size	ADC_Stop, .-ADC_Stop
 286              		.section	.text.ADC_StartConvert,"ax",%progbits
 287              		.align	1
 288              		.global	ADC_StartConvert
 289              		.code	16
 290              		.thumb_func
 291              		.type	ADC_StartConvert, %function
 292              	ADC_StartConvert:
 293              	.LFB4:
 337:.\Generated_Source\PSoC4/ADC.c **** 
 338:.\Generated_Source\PSoC4/ADC.c **** 
 339:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC.c **** *
 343:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 347:.\Generated_Source\PSoC4/ADC.c **** *
 348:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** * Return:
 356:.\Generated_Source\PSoC4/ADC.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 13


 358:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC.c **** {
 294              		.loc 1 360 0
 295              		.cfi_startproc
 361:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 296              		.loc 1 362 0
 297 0000 034B     		ldr	r3, .L19
 298 0002 8022     		mov	r2, #128
 299 0004 1968     		ldr	r1, [r3]
 300 0006 5202     		lsl	r2, r2, #9
 301 0008 0A43     		orr	r2, r1
 302 000a 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC.c **** 
 367:.\Generated_Source\PSoC4/ADC.c **** }
 303              		.loc 1 367 0
 304              		@ sp needed
 305 000c 7047     		bx	lr
 306              	.L20:
 307 000e C046     		.align	2
 308              	.L19:
 309 0010 04001A40 		.word	1075445764
 310              		.cfi_endproc
 311              	.LFE4:
 312              		.size	ADC_StartConvert, .-ADC_StartConvert
 313              		.section	.text.ADC_StopConvert,"ax",%progbits
 314              		.align	1
 315              		.global	ADC_StopConvert
 316              		.code	16
 317              		.thumb_func
 318              		.type	ADC_StopConvert, %function
 319              	ADC_StopConvert:
 320              	.LFB5:
 368:.\Generated_Source\PSoC4/ADC.c **** 
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC.c **** *
 377:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC.c **** {
 321              		.loc 1 385 0
 322              		.cfi_startproc
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 14


 386:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 323              		.loc 1 387 0
 324 0000 024B     		ldr	r3, .L22
 325 0002 034A     		ldr	r2, .L22+4
 326 0004 1968     		ldr	r1, [r3]
 388:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC.c **** }
 327              		.loc 1 389 0
 328              		@ sp needed
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 329              		.loc 1 387 0
 330 0006 0A40     		and	r2, r1
 331 0008 1A60     		str	r2, [r3]
 332              		.loc 1 389 0
 333 000a 7047     		bx	lr
 334              	.L23:
 335              		.align	2
 336              	.L22:
 337 000c 04001A40 		.word	1075445764
 338 0010 FFFFFEFF 		.word	-65537
 339              		.cfi_endproc
 340              	.LFE5:
 341              		.size	ADC_StopConvert, .-ADC_StopConvert
 342              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 343              		.align	1
 344              		.global	ADC_IsEndConversion
 345              		.code	16
 346              		.thumb_func
 347              		.type	ADC_IsEndConversion, %function
 348              	ADC_IsEndConversion:
 349              	.LFB6:
 390:.\Generated_Source\PSoC4/ADC.c **** 
 391:.\Generated_Source\PSoC4/ADC.c **** 
 392:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC.c **** *
 396:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 400:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC.c **** *
 405:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC.c **** *
 413:.\Generated_Source\PSoC4/ADC.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 15


 415:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:.\Generated_Source\PSoC4/ADC.c **** *
 417:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC.c **** {
 350              		.loc 1 419 0
 351              		.cfi_startproc
 352              	.LVL11:
 353              		.loc 1 419 0
 354 0000 011C     		mov	r1, r0
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 355              		.loc 1 420 0
 356 0002 0020     		mov	r0, #0
 357              	.LVL12:
 421:.\Generated_Source\PSoC4/ADC.c **** 
 422:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 358              		.loc 1 422 0
 359 0004 8B07     		lsl	r3, r1, #30
 360 0006 09D0     		beq	.L30
 361              	.LVL13:
 362              	.L27:
 423:.\Generated_Source\PSoC4/ADC.c ****     {
 424:.\Generated_Source\PSoC4/ADC.c ****         do
 425:.\Generated_Source\PSoC4/ADC.c ****         {
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 363              		.loc 1 426 0
 364 0008 054A     		ldr	r2, .L34
 365 000a 0123     		mov	r3, #1
 366 000c 1068     		ldr	r0, [r2]
 367 000e 1840     		and	r0, r3
 368              	.LVL14:
 427:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 369              		.loc 1 427 0
 370 0010 02D1     		bne	.L26
 371              		.loc 1 427 0 is_stmt 0 discriminator 1
 372 0012 8B07     		lsl	r3, r1, #30
 373 0014 F8D4     		bmi	.L27
 374 0016 01E0     		b	.L30
 375              	.L26:
 428:.\Generated_Source\PSoC4/ADC.c **** 
 429:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 430:.\Generated_Source\PSoC4/ADC.c ****         {
 431:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 432:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 376              		.loc 1 432 0 is_stmt 1
 377 0018 1360     		str	r3, [r2]
 378 001a 181C     		mov	r0, r3
 379              	.LVL15:
 380              	.L30:
 433:.\Generated_Source\PSoC4/ADC.c ****         }
 434:.\Generated_Source\PSoC4/ADC.c ****     }
 435:.\Generated_Source\PSoC4/ADC.c **** 
 436:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 438:.\Generated_Source\PSoC4/ADC.c ****         {
 439:.\Generated_Source\PSoC4/ADC.c ****             do
 440:.\Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 16


 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 444:.\Generated_Source\PSoC4/ADC.c **** 
 445:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 446:.\Generated_Source\PSoC4/ADC.c ****             {
 447:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 449:.\Generated_Source\PSoC4/ADC.c ****             }
 450:.\Generated_Source\PSoC4/ADC.c ****         }
 451:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 454:.\Generated_Source\PSoC4/ADC.c **** }
 381              		.loc 1 454 0
 382              		@ sp needed
 383 001c 7047     		bx	lr
 384              	.L35:
 385 001e C046     		.align	2
 386              	.L34:
 387 0020 10021A40 		.word	1075446288
 388              		.cfi_endproc
 389              	.LFE6:
 390              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 391              		.section	.text.ADC_GetResult16,"ax",%progbits
 392              		.align	1
 393              		.global	ADC_GetResult16
 394              		.code	16
 395              		.thumb_func
 396              		.type	ADC_GetResult16, %function
 397              	ADC_GetResult16:
 398              	.LFB7:
 455:.\Generated_Source\PSoC4/ADC.c **** 
 456:.\Generated_Source\PSoC4/ADC.c **** 
 457:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:.\Generated_Source\PSoC4/ADC.c **** *
 464:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC.c **** {
 399              		.loc 1 473 0
 400              		.cfi_startproc
 401              	.LVL16:
 474:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 17


 477:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 480:.\Generated_Source\PSoC4/ADC.c ****     {
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 482:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC.c ****     }
 484:.\Generated_Source\PSoC4/ADC.c ****     else
 485:.\Generated_Source\PSoC4/ADC.c ****     {
 486:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 488:.\Generated_Source\PSoC4/ADC.c ****         #else
 489:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 402              		.loc 1 489 0
 403 0000 0023     		mov	r3, #0
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 404              		.loc 1 479 0
 405 0002 9842     		cmp	r0, r3
 406 0004 02D1     		bne	.L37
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 407              		.loc 1 481 0
 408 0006 024B     		ldr	r3, .L39
 409 0008 1B68     		ldr	r3, [r3]
 410 000a 9BB2     		uxth	r3, r3
 411              	.LVL17:
 412              	.L37:
 490:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC.c ****     }
 492:.\Generated_Source\PSoC4/ADC.c **** 
 493:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 413              		.loc 1 493 0
 414 000c 18B2     		sxth	r0, r3
 415              	.LVL18:
 494:.\Generated_Source\PSoC4/ADC.c **** }
 416              		.loc 1 494 0
 417              		@ sp needed
 418 000e 7047     		bx	lr
 419              	.L40:
 420              		.align	2
 421              	.L39:
 422 0010 80011A40 		.word	1075446144
 423              		.cfi_endproc
 424              	.LFE7:
 425              		.size	ADC_GetResult16, .-ADC_GetResult16
 426              		.section	.text.ADC_SetChanMask,"ax",%progbits
 427              		.align	1
 428              		.global	ADC_SetChanMask
 429              		.code	16
 430              		.thumb_func
 431              		.type	ADC_SetChanMask, %function
 432              	ADC_SetChanMask:
 433              	.LFB8:
 495:.\Generated_Source\PSoC4/ADC.c **** 
 496:.\Generated_Source\PSoC4/ADC.c **** 
 497:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 18


 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC.c **** *
 504:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** * Return:
 514:.\Generated_Source\PSoC4/ADC.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC.c **** *
 516:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC.c **** {
 434              		.loc 1 518 0
 435              		.cfi_startproc
 436              	.LVL19:
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 437              		.loc 1 519 0
 438 0000 0123     		mov	r3, #1
 439 0002 1840     		and	r0, r3
 440              	.LVL20:
 441 0004 014B     		ldr	r3, .L42
 520:.\Generated_Source\PSoC4/ADC.c **** }
 442              		.loc 1 520 0
 443              		@ sp needed
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 444              		.loc 1 519 0
 445 0006 1860     		str	r0, [r3]
 446              		.loc 1 520 0
 447 0008 7047     		bx	lr
 448              	.L43:
 449 000a C046     		.align	2
 450              	.L42:
 451 000c 20001A40 		.word	1075445792
 452              		.cfi_endproc
 453              	.LFE8:
 454              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 455              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 456              		.align	1
 457              		.global	ADC_SetLowLimit
 458              		.code	16
 459              		.thumb_func
 460              		.type	ADC_SetLowLimit, %function
 461              	ADC_SetLowLimit:
 462              	.LFB9:
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC.c **** 
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 19


 527:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC.c ****     *
 538:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC.c ****     {
 541:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 542:.\Generated_Source\PSoC4/ADC.c ****     }
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 545:.\Generated_Source\PSoC4/ADC.c **** 
 546:.\Generated_Source\PSoC4/ADC.c **** 
 547:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC.c **** {
 463              		.loc 1 562 0
 464              		.cfi_startproc
 465              	.LVL21:
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 466              		.loc 1 563 0
 467 0000 044B     		ldr	r3, .L45
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 468              		.loc 1 564 0
 469 0002 80B2     		uxth	r0, r0
 470              	.LVL22:
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 471              		.loc 1 563 0
 472 0004 1A68     		ldr	r2, [r3]
 565:.\Generated_Source\PSoC4/ADC.c **** }
 473              		.loc 1 565 0
 474              		@ sp needed
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 475              		.loc 1 563 0
 476 0006 120C     		lsr	r2, r2, #16
 477 0008 1204     		lsl	r2, r2, #16
 478 000a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 20


 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 479              		.loc 1 564 0
 480 000c 1A68     		ldr	r2, [r3]
 481 000e 1043     		orr	r0, r2
 482 0010 1860     		str	r0, [r3]
 483              		.loc 1 565 0
 484 0012 7047     		bx	lr
 485              	.L46:
 486              		.align	2
 487              	.L45:
 488 0014 18001A40 		.word	1075445784
 489              		.cfi_endproc
 490              	.LFE9:
 491              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 492              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 493              		.align	1
 494              		.global	ADC_SetHighLimit
 495              		.code	16
 496              		.thumb_func
 497              		.type	ADC_SetHighLimit, %function
 498              	ADC_SetHighLimit:
 499              	.LFB10:
 566:.\Generated_Source\PSoC4/ADC.c **** 
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 573:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC.c **** {
 500              		.loc 1 583 0
 501              		.cfi_startproc
 502              	.LVL23:
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 503              		.loc 1 584 0
 504 0000 044B     		ldr	r3, .L48
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 505              		.loc 1 585 0
 506 0002 0004     		lsl	r0, r0, #16
 507              	.LVL24:
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 508              		.loc 1 584 0
 509 0004 1A68     		ldr	r2, [r3]
 586:.\Generated_Source\PSoC4/ADC.c **** }
 510              		.loc 1 586 0
 511              		@ sp needed
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 21


 512              		.loc 1 584 0
 513 0006 92B2     		uxth	r2, r2
 514 0008 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 515              		.loc 1 585 0
 516 000a 1A68     		ldr	r2, [r3]
 517 000c 1043     		orr	r0, r2
 518 000e 1860     		str	r0, [r3]
 519              		.loc 1 586 0
 520 0010 7047     		bx	lr
 521              	.L49:
 522 0012 C046     		.align	2
 523              	.L48:
 524 0014 18001A40 		.word	1075445784
 525              		.cfi_endproc
 526              	.LFE10:
 527              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 528              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 529              		.align	1
 530              		.global	ADC_SetLimitMask
 531              		.code	16
 532              		.thumb_func
 533              		.type	ADC_SetLimitMask, %function
 534              	ADC_SetLimitMask:
 535              	.LFB11:
 587:.\Generated_Source\PSoC4/ADC.c **** 
 588:.\Generated_Source\PSoC4/ADC.c **** 
 589:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 591:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC.c **** *
 596:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC.c **** *
 605:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC.c **** {
 536              		.loc 1 607 0
 537              		.cfi_startproc
 538              	.LVL25:
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 539              		.loc 1 608 0
 540 0000 0123     		mov	r3, #1
 541 0002 1840     		and	r0, r3
 542              	.LVL26:
 543 0004 014B     		ldr	r3, .L51
 609:.\Generated_Source\PSoC4/ADC.c **** }
 544              		.loc 1 609 0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 22


 545              		@ sp needed
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 546              		.loc 1 608 0
 547 0006 1860     		str	r0, [r3]
 548              		.loc 1 609 0
 549 0008 7047     		bx	lr
 550              	.L52:
 551 000a C046     		.align	2
 552              	.L51:
 553 000c 38021A40 		.word	1075446328
 554              		.cfi_endproc
 555              	.LFE11:
 556              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 557              		.section	.text.ADC_SetSatMask,"ax",%progbits
 558              		.align	1
 559              		.global	ADC_SetSatMask
 560              		.code	16
 561              		.thumb_func
 562              		.type	ADC_SetSatMask, %function
 563              	ADC_SetSatMask:
 564              	.LFB12:
 610:.\Generated_Source\PSoC4/ADC.c **** 
 611:.\Generated_Source\PSoC4/ADC.c **** 
 612:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 618:.\Generated_Source\PSoC4/ADC.c **** *
 619:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC.c **** {
 565              		.loc 1 630 0
 566              		.cfi_startproc
 567              	.LVL27:
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 568              		.loc 1 631 0
 569 0000 0123     		mov	r3, #1
 570 0002 1840     		and	r0, r3
 571              	.LVL28:
 572 0004 014B     		ldr	r3, .L54
 632:.\Generated_Source\PSoC4/ADC.c **** }
 573              		.loc 1 632 0
 574              		@ sp needed
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 575              		.loc 1 631 0
 576 0006 1860     		str	r0, [r3]
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 23


 577              		.loc 1 632 0
 578 0008 7047     		bx	lr
 579              	.L55:
 580 000a C046     		.align	2
 581              	.L54:
 582 000c 28021A40 		.word	1075446312
 583              		.cfi_endproc
 584              	.LFE12:
 585              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 586              		.section	.text.ADC_SetOffset,"ax",%progbits
 587              		.align	1
 588              		.global	ADC_SetOffset
 589              		.code	16
 590              		.thumb_func
 591              		.type	ADC_SetOffset, %function
 592              	ADC_SetOffset:
 593              	.LFB13:
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** 
 635:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC.c **** *
 639:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 641:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC.c **** *
 645:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC.c **** *
 656:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC.c **** {
 594              		.loc 1 658 0
 595              		.cfi_startproc
 596              	.LVL29:
 659:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 597              		.loc 1 662 0
 598 0000 014B     		ldr	r3, .L57
 599 0002 4000     		lsl	r0, r0, #1
 600              	.LVL30:
 601 0004 C152     		strh	r1, [r0, r3]
 663:.\Generated_Source\PSoC4/ADC.c **** }
 602              		.loc 1 663 0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 24


 603              		@ sp needed
 604 0006 7047     		bx	lr
 605              	.L58:
 606              		.align	2
 607              	.L57:
 608 0008 00000000 		.word	ADC_offset
 609              		.cfi_endproc
 610              	.LFE13:
 611              		.size	ADC_SetOffset, .-ADC_SetOffset
 612              		.section	.text.ADC_SetGain,"ax",%progbits
 613              		.align	1
 614              		.global	ADC_SetGain
 615              		.code	16
 616              		.thumb_func
 617              		.type	ADC_SetGain, %function
 618              	ADC_SetGain:
 619              	.LFB14:
 664:.\Generated_Source\PSoC4/ADC.c **** 
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC.c **** *
 670:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 671:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC.c **** *
 679:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC.c **** *
 686:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC.c **** *
 690:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC.c **** {
 620              		.loc 1 692 0
 621              		.cfi_startproc
 622              	.LVL31:
 693:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 623              		.loc 1 696 0
 624 0000 014B     		ldr	r3, .L60
 625 0002 8000     		lsl	r0, r0, #2
 626              	.LVL32:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 25


 627 0004 C150     		str	r1, [r0, r3]
 697:.\Generated_Source\PSoC4/ADC.c **** }
 628              		.loc 1 697 0
 629              		@ sp needed
 630 0006 7047     		bx	lr
 631              	.L61:
 632              		.align	2
 633              	.L60:
 634 0008 00000000 		.word	ADC_countsPer10Volt
 635              		.cfi_endproc
 636              	.LFE14:
 637              		.size	ADC_SetGain, .-ADC_SetGain
 638              		.global	__aeabi_idiv
 639              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 640              		.align	1
 641              		.global	ADC_CountsTo_mVolts
 642              		.code	16
 643              		.thumb_func
 644              		.type	ADC_CountsTo_mVolts, %function
 645              	ADC_CountsTo_mVolts:
 646              	.LFB15:
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:.\Generated_Source\PSoC4/ADC.c **** 
 702:.\Generated_Source\PSoC4/ADC.c **** 
 703:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/ADC.c ****     *
 707:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC.c ****     *
 711:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC.c ****     *
 718:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC.c ****     *
 723:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 647              		.loc 1 725 0
 648              		.cfi_startproc
 649              	.LVL33:
 726:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 730:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 26


 731:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC.c ****             {
 735:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC.c ****             }
 737:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 650              		.loc 1 740 0
 651 0000 0D4B     		ldr	r3, .L65
 652 0002 4200     		lsl	r2, r0, #1
 653 0004 D35A     		ldrh	r3, [r2, r3]
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 654              		.loc 1 725 0
 655 0006 10B5     		push	{r4, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659              		.loc 1 740 0
 660 0008 C91A     		sub	r1, r1, r3
 661              	.LVL34:
 741:.\Generated_Source\PSoC4/ADC.c **** 
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 662              		.loc 1 742 0
 663 000a 0C4C     		ldr	r4, .L65+4
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 664              		.loc 1 740 0
 665 000c 09B2     		sxth	r1, r1
 666              	.LVL35:
 667              		.loc 1 742 0
 668 000e 4C43     		mul	r4, r1
 669 0010 0B4A     		ldr	r2, .L65+8
 670 0012 8300     		lsl	r3, r0, #2
 743:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 671              		.loc 1 743 0
 672 0014 0029     		cmp	r1, #0
 673 0016 04DD     		ble	.L63
 674              		.loc 1 743 0 is_stmt 0 discriminator 1
 675 0018 D158     		ldr	r1, [r2, r3]
 676              	.LVL36:
 677 001a C80F     		lsr	r0, r1, #31
 678              	.LVL37:
 679 001c 4018     		add	r0, r0, r1
 680 001e 4010     		asr	r0, r0, #1
 681 0020 04E0     		b	.L64
 682              	.LVL38:
 683              	.L63:
 684              		.loc 1 743 0 discriminator 2
 685 0022 D158     		ldr	r1, [r2, r3]
 686              	.LVL39:
 687 0024 C80F     		lsr	r0, r1, #31
 688              	.LVL40:
 689 0026 4018     		add	r0, r0, r1
 690 0028 4010     		asr	r0, r0, #1
 691 002a 4042     		neg	r0, r0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 27


 692              	.L64:
 744:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 693              		.loc 1 744 0 is_stmt 1
 694 002c D158     		ldr	r1, [r2, r3]
 695              	.LVL41:
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 696              		.loc 1 742 0
 697 002e 2018     		add	r0, r4, r0
 698              	.LVL42:
 699              		.loc 1 744 0
 700 0030 FFF7FEFF 		bl	__aeabi_idiv
 701              	.LVL43:
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 747:.\Generated_Source\PSoC4/ADC.c ****     }
 702              		.loc 1 747 0
 703              		@ sp needed
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 704              		.loc 1 746 0
 705 0034 00B2     		sxth	r0, r0
 706              		.loc 1 747 0
 707 0036 10BD     		pop	{r4, pc}
 708              	.L66:
 709              		.align	2
 710              	.L65:
 711 0038 00000000 		.word	ADC_offset
 712 003c 10270000 		.word	10000
 713 0040 00000000 		.word	ADC_countsPer10Volt
 714              		.cfi_endproc
 715              	.LFE15:
 716              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 717              		.global	__aeabi_lmul
 718              		.global	__aeabi_ldivmod
 719              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 720              		.align	1
 721              		.global	ADC_CountsTo_uVolts
 722              		.code	16
 723              		.thumb_func
 724              		.type	ADC_CountsTo_uVolts, %function
 725              	ADC_CountsTo_uVolts:
 726              	.LFB16:
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c **** 
 750:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC.c ****     *
 754:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC.c ****     *
 758:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 28


 764:.\Generated_Source\PSoC4/ADC.c ****     *
 765:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC.c ****     *
 770:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 727              		.loc 1 779 0
 728              		.cfi_startproc
 729              	.LVL44:
 780:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 784:.\Generated_Source\PSoC4/ADC.c **** 
 785:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC.c ****             {
 789:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 790:.\Generated_Source\PSoC4/ADC.c ****             }
 791:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 730              		.loc 1 794 0
 731 0000 0B4B     		ldr	r3, .L68+8
 732 0002 4200     		lsl	r2, r0, #1
 733 0004 D35A     		ldrh	r3, [r2, r3]
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 734              		.loc 1 779 0
 735 0006 10B5     		push	{r4, lr}
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 4, -8
 738              		.cfi_offset 14, -4
 739              		.loc 1 794 0
 740 0008 C91A     		sub	r1, r1, r3
 741              	.LVL45:
 795:.\Generated_Source\PSoC4/ADC.c **** 
 796:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 742              		.loc 1 796 0
 743 000a 0A4B     		ldr	r3, .L68+12
 744 000c 8000     		lsl	r0, r0, #2
 745              	.LVL46:
 746 000e C458     		ldr	r4, [r0, r3]
 747              	.LVL47:
 748 0010 08B2     		sxth	r0, r1
 749 0012 064B     		ldr	r3, .L68+4
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 29


 750 0014 044A     		ldr	r2, .L68
 751 0016 C117     		asr	r1, r0, #31
 752              	.LVL48:
 753 0018 FFF7FEFF 		bl	__aeabi_lmul
 754              	.LVL49:
 755 001c E317     		asr	r3, r4, #31
 756 001e 221C     		mov	r2, r4
 757 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 758              	.LVL50:
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 799:.\Generated_Source\PSoC4/ADC.c ****     }
 759              		.loc 1 799 0
 760              		@ sp needed
 761 0024 10BD     		pop	{r4, pc}
 762              	.L69:
 763 0026 C046     		.align	3
 764              	.L68:
 765 0028 80969800 		.word	10000000
 766 002c 00000000 		.word	0
 767 0030 00000000 		.word	ADC_offset
 768 0034 00000000 		.word	ADC_countsPer10Volt
 769              		.cfi_endproc
 770              	.LFE16:
 771              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 772              		.global	__aeabi_i2f
 773              		.global	__aeabi_fmul
 774              		.global	__aeabi_fdiv
 775              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 776              		.align	1
 777              		.global	ADC_CountsTo_Volts
 778              		.code	16
 779              		.thumb_func
 780              		.type	ADC_CountsTo_Volts, %function
 781              	ADC_CountsTo_Volts:
 782              	.LFB17:
 800:.\Generated_Source\PSoC4/ADC.c **** 
 801:.\Generated_Source\PSoC4/ADC.c **** 
 802:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 803:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC.c ****     *
 806:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC.c ****     *
 810:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC.c ****     *
 817:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 30


 821:.\Generated_Source\PSoC4/ADC.c ****     *
 822:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC.c ****     {
 783              		.loc 1 824 0
 784              		.cfi_startproc
 785              	.LVL51:
 786 0000 38B5     		push	{r3, r4, r5, lr}
 787              		.cfi_def_cfa_offset 16
 788              		.cfi_offset 3, -16
 789              		.cfi_offset 4, -12
 790              		.cfi_offset 5, -8
 791              		.cfi_offset 14, -4
 825:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC.c ****             {
 834:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 835:.\Generated_Source\PSoC4/ADC.c ****             }
 836:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 792              		.loc 1 839 0
 793 0002 0B4B     		ldr	r3, .L71
 794 0004 4200     		lsl	r2, r0, #1
 795 0006 D35A     		ldrh	r3, [r2, r3]
 840:.\Generated_Source\PSoC4/ADC.c **** 
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 796              		.loc 1 841 0
 797 0008 8000     		lsl	r0, r0, #2
 798              	.LVL52:
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 799              		.loc 1 839 0
 800 000a C91A     		sub	r1, r1, r3
 801              	.LVL53:
 802              		.loc 1 841 0
 803 000c 094B     		ldr	r3, .L71+4
 842:.\Generated_Source\PSoC4/ADC.c **** 
 843:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 844:.\Generated_Source\PSoC4/ADC.c ****     }
 804              		.loc 1 844 0
 805              		@ sp needed
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 806              		.loc 1 841 0
 807 000e C558     		ldr	r5, [r0, r3]
 808              	.LVL54:
 809 0010 08B2     		sxth	r0, r1
 810 0012 FFF7FEFF 		bl	__aeabi_i2f
 811              	.LVL55:
 812 0016 0849     		ldr	r1, .L71+8
 813 0018 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 31


 814              	.LVL56:
 815 001c 041C     		add	r4, r0, #0
 816 001e 281C     		mov	r0, r5
 817 0020 FFF7FEFF 		bl	__aeabi_i2f
 818              	.LVL57:
 819 0024 011C     		add	r1, r0, #0
 820 0026 201C     		add	r0, r4, #0
 821 0028 FFF7FEFF 		bl	__aeabi_fdiv
 822              	.LVL58:
 823              		.loc 1 844 0
 824 002c 38BD     		pop	{r3, r4, r5, pc}
 825              	.L72:
 826 002e C046     		.align	2
 827              	.L71:
 828 0030 00000000 		.word	ADC_offset
 829 0034 00000000 		.word	ADC_countsPer10Volt
 830 0038 00002041 		.word	1092616192
 831              		.cfi_endproc
 832              	.LFE17:
 833              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 834              		.comm	ADC_countsPer10Volt,4,4
 835              		.comm	ADC_offset,2,2
 836              		.global	ADC_initVar
 837              		.bss
 838              		.set	.LANCHOR0,. + 0
 839              		.type	ADC_initVar, %object
 840              		.size	ADC_initVar, 1
 841              	ADC_initVar:
 842 0000 00       		.space	1
 843              		.text
 844              	.Letext0:
 845              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 846              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 847              		.section	.debug_info,"",%progbits
 848              	.Ldebug_info0:
 849 0000 1D050000 		.4byte	0x51d
 850 0004 0400     		.2byte	0x4
 851 0006 00000000 		.4byte	.Ldebug_abbrev0
 852 000a 04       		.byte	0x4
 853 000b 01       		.uleb128 0x1
 854 000c A9020000 		.4byte	.LASF59
 855 0010 01       		.byte	0x1
 856 0011 2E020000 		.4byte	.LASF60
 857 0015 36030000 		.4byte	.LASF61
 858 0019 00000000 		.4byte	.Ldebug_ranges0+0
 859 001d 00000000 		.4byte	0
 860 0021 00000000 		.4byte	.Ldebug_line0
 861 0025 02       		.uleb128 0x2
 862 0026 08       		.byte	0x8
 863 0027 07       		.byte	0x7
 864 0028 32000000 		.4byte	.LASF0
 865 002c 02       		.uleb128 0x2
 866 002d 04       		.byte	0x4
 867 002e 04       		.byte	0x4
 868 002f FA010000 		.4byte	.LASF1
 869 0033 02       		.uleb128 0x2
 870 0034 08       		.byte	0x8
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 32


 871 0035 05       		.byte	0x5
 872 0036 5A000000 		.4byte	.LASF2
 873 003a 03       		.uleb128 0x3
 874 003b 04       		.byte	0x4
 875 003c 05       		.byte	0x5
 876 003d 696E7400 		.ascii	"int\000"
 877 0041 02       		.uleb128 0x2
 878 0042 02       		.byte	0x2
 879 0043 05       		.byte	0x5
 880 0044 66020000 		.4byte	.LASF3
 881 0048 02       		.uleb128 0x2
 882 0049 01       		.byte	0x1
 883 004a 06       		.byte	0x6
 884 004b 68000000 		.4byte	.LASF4
 885 004f 02       		.uleb128 0x2
 886 0050 01       		.byte	0x1
 887 0051 08       		.byte	0x8
 888 0052 4D020000 		.4byte	.LASF5
 889 0056 02       		.uleb128 0x2
 890 0057 02       		.byte	0x2
 891 0058 07       		.byte	0x7
 892 0059 49010000 		.4byte	.LASF6
 893 005d 02       		.uleb128 0x2
 894 005e 04       		.byte	0x4
 895 005f 05       		.byte	0x5
 896 0060 8B000000 		.4byte	.LASF7
 897 0064 02       		.uleb128 0x2
 898 0065 04       		.byte	0x4
 899 0066 07       		.byte	0x7
 900 0067 18010000 		.4byte	.LASF8
 901 006b 02       		.uleb128 0x2
 902 006c 04       		.byte	0x4
 903 006d 07       		.byte	0x7
 904 006e 04010000 		.4byte	.LASF9
 905 0072 04       		.uleb128 0x4
 906 0073 BC000000 		.4byte	.LASF10
 907 0077 02       		.byte	0x2
 908 0078 A1       		.byte	0xa1
 909 0079 4F000000 		.4byte	0x4f
 910 007d 04       		.uleb128 0x4
 911 007e 00000000 		.4byte	.LASF11
 912 0082 02       		.byte	0x2
 913 0083 A2       		.byte	0xa2
 914 0084 56000000 		.4byte	0x56
 915 0088 04       		.uleb128 0x4
 916 0089 D3000000 		.4byte	.LASF12
 917 008d 02       		.byte	0x2
 918 008e A3       		.byte	0xa3
 919 008f 64000000 		.4byte	0x64
 920 0093 04       		.uleb128 0x4
 921 0094 86030000 		.4byte	.LASF13
 922 0098 02       		.byte	0x2
 923 0099 A5       		.byte	0xa5
 924 009a 41000000 		.4byte	0x41
 925 009e 04       		.uleb128 0x4
 926 009f 7B000000 		.4byte	.LASF14
 927 00a3 02       		.byte	0x2
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 33


 928 00a4 A6       		.byte	0xa6
 929 00a5 5D000000 		.4byte	0x5d
 930 00a9 04       		.uleb128 0x4
 931 00aa 88010000 		.4byte	.LASF15
 932 00ae 02       		.byte	0x2
 933 00af A7       		.byte	0xa7
 934 00b0 2C000000 		.4byte	0x2c
 935 00b4 02       		.uleb128 0x2
 936 00b5 08       		.byte	0x8
 937 00b6 04       		.byte	0x4
 938 00b7 CC000000 		.4byte	.LASF16
 939 00bb 04       		.uleb128 0x4
 940 00bc C7010000 		.4byte	.LASF17
 941 00c0 02       		.byte	0x2
 942 00c1 AC       		.byte	0xac
 943 00c2 33000000 		.4byte	0x33
 944 00c6 02       		.uleb128 0x2
 945 00c7 01       		.byte	0x1
 946 00c8 08       		.byte	0x8
 947 00c9 84020000 		.4byte	.LASF18
 948 00cd 05       		.uleb128 0x5
 949 00ce 82010000 		.4byte	.LASF19
 950 00d2 02       		.byte	0x2
 951 00d3 4D01     		.2byte	0x14d
 952 00d5 D9000000 		.4byte	0xd9
 953 00d9 06       		.uleb128 0x6
 954 00da 88000000 		.4byte	0x88
 955 00de 05       		.uleb128 0x5
 956 00df 89020000 		.4byte	.LASF20
 957 00e3 02       		.byte	0x2
 958 00e4 5D01     		.2byte	0x15d
 959 00e6 EA000000 		.4byte	0xea
 960 00ea 07       		.uleb128 0x7
 961 00eb 04       		.byte	0x4
 962 00ec F0000000 		.4byte	0xf0
 963 00f0 08       		.uleb128 0x8
 964 00f1 02       		.uleb128 0x2
 965 00f2 04       		.byte	0x4
 966 00f3 07       		.byte	0x7
 967 00f4 90010000 		.4byte	.LASF21
 968 00f8 09       		.uleb128 0x9
 969 00f9 29000000 		.4byte	.LASF25
 970 00fd 01       		.byte	0x1
 971 00fe 5E       		.byte	0x5e
 972 00ff 00000000 		.4byte	.LFB1
 973 0103 F4000000 		.4byte	.LFE1-.LFB1
 974 0107 01       		.uleb128 0x1
 975 0108 9C       		.byte	0x9c
 976 0109 60010000 		.4byte	0x160
 977 010d 0A       		.uleb128 0xa
 978 010e 79020000 		.4byte	.LASF22
 979 0112 01       		.byte	0x1
 980 0113 60       		.byte	0x60
 981 0114 88000000 		.4byte	0x88
 982 0118 00000000 		.4byte	.LLST0
 983 011c 0A       		.uleb128 0xa
 984 011d 3F010000 		.4byte	.LASF23
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 34


 985 0121 01       		.byte	0x1
 986 0122 61       		.byte	0x61
 987 0123 88000000 		.4byte	0x88
 988 0127 20000000 		.4byte	.LLST1
 989 012b 0B       		.uleb128 0xb
 990 012c 0F000000 		.4byte	.LASF24
 991 0130 01       		.byte	0x1
 992 0131 62       		.byte	0x62
 993 0132 9E000000 		.4byte	0x9e
 994 0136 0010     		.2byte	0x1000
 995 0138 0C       		.uleb128 0xc
 996 0139 0A000000 		.4byte	.LVL0
 997 013d E3040000 		.4byte	0x4e3
 998 0141 50010000 		.4byte	0x150
 999 0145 0D       		.uleb128 0xd
 1000 0146 01       		.uleb128 0x1
 1001 0147 51       		.byte	0x51
 1002 0148 01       		.uleb128 0x1
 1003 0149 33       		.byte	0x33
 1004 014a 0D       		.uleb128 0xd
 1005 014b 01       		.uleb128 0x1
 1006 014c 50       		.byte	0x50
 1007 014d 01       		.uleb128 0x1
 1008 014e 3E       		.byte	0x3e
 1009 014f 00       		.byte	0
 1010 0150 0E       		.uleb128 0xe
 1011 0151 12000000 		.4byte	.LVL1
 1012 0155 F9040000 		.4byte	0x4f9
 1013 0159 0D       		.uleb128 0xd
 1014 015a 01       		.uleb128 0x1
 1015 015b 50       		.byte	0x50
 1016 015c 01       		.uleb128 0x1
 1017 015d 3E       		.byte	0x3e
 1018 015e 00       		.byte	0
 1019 015f 00       		.byte	0
 1020 0160 0F       		.uleb128 0xf
 1021 0161 7B030000 		.4byte	.LASF26
 1022 0165 01       		.byte	0x1
 1023 0166 2A01     		.2byte	0x12a
 1024 0168 00000000 		.4byte	.LFB2
 1025 016c 20000000 		.4byte	.LFE2-.LFB2
 1026 0170 01       		.uleb128 0x1
 1027 0171 9C       		.byte	0x9c
 1028 0172 86010000 		.4byte	0x186
 1029 0176 0E       		.uleb128 0xe
 1030 0177 1A000000 		.4byte	.LVL8
 1031 017b 13050000 		.4byte	0x513
 1032 017f 0D       		.uleb128 0xd
 1033 0180 01       		.uleb128 0x1
 1034 0181 50       		.byte	0x50
 1035 0182 01       		.uleb128 0x1
 1036 0183 3A       		.byte	0x3a
 1037 0184 00       		.byte	0
 1038 0185 00       		.byte	0
 1039 0186 09       		.uleb128 0x9
 1040 0187 81000000 		.4byte	.LASF27
 1041 018b 01       		.byte	0x1
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 35


 1042 018c 3F       		.byte	0x3f
 1043 018d 00000000 		.4byte	.LFB0
 1044 0191 1C000000 		.4byte	.LFE0-.LFB0
 1045 0195 01       		.uleb128 0x1
 1046 0196 9C       		.byte	0x9c
 1047 0197 AE010000 		.4byte	0x1ae
 1048 019b 10       		.uleb128 0x10
 1049 019c 0E000000 		.4byte	.LVL9
 1050 01a0 F8000000 		.4byte	0xf8
 1051 01a4 10       		.uleb128 0x10
 1052 01a5 16000000 		.4byte	.LVL10
 1053 01a9 60010000 		.4byte	0x160
 1054 01ad 00       		.byte	0
 1055 01ae 11       		.uleb128 0x11
 1056 01af 70020000 		.4byte	.LASF28
 1057 01b3 01       		.byte	0x1
 1058 01b4 4D01     		.2byte	0x14d
 1059 01b6 00000000 		.4byte	.LFB3
 1060 01ba 10000000 		.4byte	.LFE3-.LFB3
 1061 01be 01       		.uleb128 0x1
 1062 01bf 9C       		.byte	0x9c
 1063 01c0 11       		.uleb128 0x11
 1064 01c1 49000000 		.4byte	.LASF29
 1065 01c5 01       		.byte	0x1
 1066 01c6 6701     		.2byte	0x167
 1067 01c8 00000000 		.4byte	.LFB4
 1068 01cc 14000000 		.4byte	.LFE4-.LFB4
 1069 01d0 01       		.uleb128 0x1
 1070 01d1 9C       		.byte	0x9c
 1071 01d2 11       		.uleb128 0x11
 1072 01d3 6B010000 		.4byte	.LASF30
 1073 01d7 01       		.byte	0x1
 1074 01d8 8001     		.2byte	0x180
 1075 01da 00000000 		.4byte	.LFB5
 1076 01de 14000000 		.4byte	.LFE5-.LFB5
 1077 01e2 01       		.uleb128 0x1
 1078 01e3 9C       		.byte	0x9c
 1079 01e4 12       		.uleb128 0x12
 1080 01e5 B3010000 		.4byte	.LASF32
 1081 01e9 01       		.byte	0x1
 1082 01ea A201     		.2byte	0x1a2
 1083 01ec 88000000 		.4byte	0x88
 1084 01f0 00000000 		.4byte	.LFB6
 1085 01f4 24000000 		.4byte	.LFE6-.LFB6
 1086 01f8 01       		.uleb128 0x1
 1087 01f9 9C       		.byte	0x9c
 1088 01fa 1F020000 		.4byte	0x21f
 1089 01fe 13       		.uleb128 0x13
 1090 01ff EB000000 		.4byte	.LASF34
 1091 0203 01       		.byte	0x1
 1092 0204 A201     		.2byte	0x1a2
 1093 0206 88000000 		.4byte	0x88
 1094 020a 57000000 		.4byte	.LLST2
 1095 020e 14       		.uleb128 0x14
 1096 020f 74000000 		.4byte	.LASF31
 1097 0213 01       		.byte	0x1
 1098 0214 A401     		.2byte	0x1a4
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 36


 1099 0216 88000000 		.4byte	0x88
 1100 021a 75000000 		.4byte	.LLST3
 1101 021e 00       		.byte	0
 1102 021f 12       		.uleb128 0x12
 1103 0220 A1030000 		.4byte	.LASF33
 1104 0224 01       		.byte	0x1
 1105 0225 D801     		.2byte	0x1d8
 1106 0227 93000000 		.4byte	0x93
 1107 022b 00000000 		.4byte	.LFB7
 1108 022f 14000000 		.4byte	.LFE7-.LFB7
 1109 0233 01       		.uleb128 0x1
 1110 0234 9C       		.byte	0x9c
 1111 0235 58020000 		.4byte	0x258
 1112 0239 13       		.uleb128 0x13
 1113 023a 7F020000 		.4byte	.LASF35
 1114 023e 01       		.byte	0x1
 1115 023f D801     		.2byte	0x1d8
 1116 0241 88000000 		.4byte	0x88
 1117 0245 94000000 		.4byte	.LLST4
 1118 0249 15       		.uleb128 0x15
 1119 024a 9A030000 		.4byte	.LASF36
 1120 024e 01       		.byte	0x1
 1121 024f DA01     		.2byte	0x1da
 1122 0251 88000000 		.4byte	0x88
 1123 0255 01       		.uleb128 0x1
 1124 0256 53       		.byte	0x53
 1125 0257 00       		.byte	0
 1126 0258 0F       		.uleb128 0xf
 1127 0259 DE010000 		.4byte	.LASF37
 1128 025d 01       		.byte	0x1
 1129 025e 0502     		.2byte	0x205
 1130 0260 00000000 		.4byte	.LFB8
 1131 0264 10000000 		.4byte	.LFE8-.LFB8
 1132 0268 01       		.uleb128 0x1
 1133 0269 9C       		.byte	0x9c
 1134 026a 7F020000 		.4byte	0x27f
 1135 026e 13       		.uleb128 0x13
 1136 026f DA000000 		.4byte	.LASF38
 1137 0273 01       		.byte	0x1
 1138 0274 0502     		.2byte	0x205
 1139 0276 88000000 		.4byte	0x88
 1140 027a B5000000 		.4byte	.LLST5
 1141 027e 00       		.byte	0
 1142 027f 0F       		.uleb128 0xf
 1143 0280 1E020000 		.4byte	.LASF39
 1144 0284 01       		.byte	0x1
 1145 0285 3102     		.2byte	0x231
 1146 0287 00000000 		.4byte	.LFB9
 1147 028b 18000000 		.4byte	.LFE9-.LFB9
 1148 028f 01       		.uleb128 0x1
 1149 0290 9C       		.byte	0x9c
 1150 0291 A6020000 		.4byte	0x2a6
 1151 0295 13       		.uleb128 0x13
 1152 0296 99010000 		.4byte	.LASF40
 1153 029a 01       		.byte	0x1
 1154 029b 3102     		.2byte	0x231
 1155 029d 88000000 		.4byte	0x88
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 37


 1156 02a1 D6000000 		.4byte	.LLST6
 1157 02a5 00       		.byte	0
 1158 02a6 0F       		.uleb128 0xf
 1159 02a7 A2010000 		.4byte	.LASF41
 1160 02ab 01       		.byte	0x1
 1161 02ac 4602     		.2byte	0x246
 1162 02ae 00000000 		.4byte	.LFB10
 1163 02b2 18000000 		.4byte	.LFE10-.LFB10
 1164 02b6 01       		.uleb128 0x1
 1165 02b7 9C       		.byte	0x9c
 1166 02b8 CD020000 		.4byte	0x2cd
 1167 02bc 13       		.uleb128 0x13
 1168 02bd 00020000 		.4byte	.LASF42
 1169 02c1 01       		.byte	0x1
 1170 02c2 4602     		.2byte	0x246
 1171 02c4 88000000 		.4byte	0x88
 1172 02c8 F7000000 		.4byte	.LLST7
 1173 02cc 00       		.byte	0
 1174 02cd 0F       		.uleb128 0xf
 1175 02ce F3000000 		.4byte	.LASF43
 1176 02d2 01       		.byte	0x1
 1177 02d3 5E02     		.2byte	0x25e
 1178 02d5 00000000 		.4byte	.LFB11
 1179 02d9 10000000 		.4byte	.LFE11-.LFB11
 1180 02dd 01       		.uleb128 0x1
 1181 02de 9C       		.byte	0x9c
 1182 02df F4020000 		.4byte	0x2f4
 1183 02e3 13       		.uleb128 0x13
 1184 02e4 DA000000 		.4byte	.LASF38
 1185 02e8 01       		.byte	0x1
 1186 02e9 5E02     		.2byte	0x25e
 1187 02eb 88000000 		.4byte	0x88
 1188 02ef 18010000 		.4byte	.LLST8
 1189 02f3 00       		.byte	0
 1190 02f4 0F       		.uleb128 0xf
 1191 02f5 2A010000 		.4byte	.LASF44
 1192 02f9 01       		.byte	0x1
 1193 02fa 7502     		.2byte	0x275
 1194 02fc 00000000 		.4byte	.LFB12
 1195 0300 10000000 		.4byte	.LFE12-.LFB12
 1196 0304 01       		.uleb128 0x1
 1197 0305 9C       		.byte	0x9c
 1198 0306 1B030000 		.4byte	0x31b
 1199 030a 13       		.uleb128 0x13
 1200 030b DA000000 		.4byte	.LASF38
 1201 030f 01       		.byte	0x1
 1202 0310 7502     		.2byte	0x275
 1203 0312 88000000 		.4byte	0x88
 1204 0316 39010000 		.4byte	.LLST9
 1205 031a 00       		.byte	0
 1206 031b 0F       		.uleb128 0xf
 1207 031c 8C030000 		.4byte	.LASF45
 1208 0320 01       		.byte	0x1
 1209 0321 9102     		.2byte	0x291
 1210 0323 00000000 		.4byte	.LFB13
 1211 0327 0C000000 		.4byte	.LFE13-.LFB13
 1212 032b 01       		.uleb128 0x1
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 38


 1213 032c 9C       		.byte	0x9c
 1214 032d 50030000 		.4byte	0x350
 1215 0331 13       		.uleb128 0x13
 1216 0332 7F020000 		.4byte	.LASF35
 1217 0336 01       		.byte	0x1
 1218 0337 9102     		.2byte	0x291
 1219 0339 88000000 		.4byte	0x88
 1220 033d 5A010000 		.4byte	.LLST10
 1221 0341 16       		.uleb128 0x16
 1222 0342 25030000 		.4byte	.LASF46
 1223 0346 01       		.byte	0x1
 1224 0347 9102     		.2byte	0x291
 1225 0349 93000000 		.4byte	0x93
 1226 034d 01       		.uleb128 0x1
 1227 034e 51       		.byte	0x51
 1228 034f 00       		.byte	0
 1229 0350 0F       		.uleb128 0xf
 1230 0351 EE010000 		.4byte	.LASF47
 1231 0355 01       		.byte	0x1
 1232 0356 B302     		.2byte	0x2b3
 1233 0358 00000000 		.4byte	.LFB14
 1234 035c 0C000000 		.4byte	.LFE14-.LFB14
 1235 0360 01       		.uleb128 0x1
 1236 0361 9C       		.byte	0x9c
 1237 0362 85030000 		.4byte	0x385
 1238 0366 13       		.uleb128 0x13
 1239 0367 7F020000 		.4byte	.LASF35
 1240 036b 01       		.byte	0x1
 1241 036c B302     		.2byte	0x2b3
 1242 036e 88000000 		.4byte	0x88
 1243 0372 7B010000 		.4byte	.LLST11
 1244 0376 16       		.uleb128 0x16
 1245 0377 07000000 		.4byte	.LASF48
 1246 037b 01       		.byte	0x1
 1247 037c B302     		.2byte	0x2b3
 1248 037e 9E000000 		.4byte	0x9e
 1249 0382 01       		.uleb128 0x1
 1250 0383 51       		.byte	0x51
 1251 0384 00       		.byte	0
 1252 0385 17       		.uleb128 0x17
 1253 0386 0A020000 		.4byte	.LASF49
 1254 038a 01       		.byte	0x1
 1255 038b D402     		.2byte	0x2d4
 1256 038d 93000000 		.4byte	0x93
 1257 0391 00000000 		.4byte	.LFB15
 1258 0395 44000000 		.4byte	.LFE15-.LFB15
 1259 0399 01       		.uleb128 0x1
 1260 039a 9C       		.byte	0x9c
 1261 039b D0030000 		.4byte	0x3d0
 1262 039f 13       		.uleb128 0x13
 1263 03a0 7F020000 		.4byte	.LASF35
 1264 03a4 01       		.byte	0x1
 1265 03a5 D402     		.2byte	0x2d4
 1266 03a7 88000000 		.4byte	0x88
 1267 03ab 9C010000 		.4byte	.LLST12
 1268 03af 13       		.uleb128 0x13
 1269 03b0 2C030000 		.4byte	.LASF50
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 39


 1270 03b4 01       		.byte	0x1
 1271 03b5 D402     		.2byte	0x2d4
 1272 03b7 93000000 		.4byte	0x93
 1273 03bb D6010000 		.4byte	.LLST13
 1274 03bf 14       		.uleb128 0x14
 1275 03c0 7B010000 		.4byte	.LASF51
 1276 03c4 01       		.byte	0x1
 1277 03c5 D602     		.2byte	0x2d6
 1278 03c7 93000000 		.4byte	0x93
 1279 03cb 0D020000 		.4byte	.LLST14
 1280 03cf 00       		.byte	0
 1281 03d0 17       		.uleb128 0x17
 1282 03d1 94000000 		.4byte	.LASF52
 1283 03d5 01       		.byte	0x1
 1284 03d6 0A03     		.2byte	0x30a
 1285 03d8 9E000000 		.4byte	0x9e
 1286 03dc 00000000 		.4byte	.LFB16
 1287 03e0 38000000 		.4byte	.LFE16-.LFB16
 1288 03e4 01       		.uleb128 0x1
 1289 03e5 9C       		.byte	0x9c
 1290 03e6 1B040000 		.4byte	0x41b
 1291 03ea 13       		.uleb128 0x13
 1292 03eb 7F020000 		.4byte	.LASF35
 1293 03ef 01       		.byte	0x1
 1294 03f0 0A03     		.2byte	0x30a
 1295 03f2 88000000 		.4byte	0x88
 1296 03f6 28020000 		.4byte	.LLST15
 1297 03fa 13       		.uleb128 0x13
 1298 03fb 2C030000 		.4byte	.LASF50
 1299 03ff 01       		.byte	0x1
 1300 0400 0A03     		.2byte	0x30a
 1301 0402 93000000 		.4byte	0x93
 1302 0406 49020000 		.4byte	.LLST16
 1303 040a 14       		.uleb128 0x14
 1304 040b 11010000 		.4byte	.LASF53
 1305 040f 01       		.byte	0x1
 1306 0410 0C03     		.2byte	0x30c
 1307 0412 BB000000 		.4byte	0xbb
 1308 0416 67020000 		.4byte	.LLST17
 1309 041a 00       		.byte	0
 1310 041b 17       		.uleb128 0x17
 1311 041c 16000000 		.4byte	.LASF54
 1312 0420 01       		.byte	0x1
 1313 0421 3703     		.2byte	0x337
 1314 0423 A9000000 		.4byte	0xa9
 1315 0427 00000000 		.4byte	.LFB17
 1316 042b 3C000000 		.4byte	.LFE17-.LFB17
 1317 042f 01       		.uleb128 0x1
 1318 0430 9C       		.byte	0x9c
 1319 0431 66040000 		.4byte	0x466
 1320 0435 13       		.uleb128 0x13
 1321 0436 7F020000 		.4byte	.LASF35
 1322 043a 01       		.byte	0x1
 1323 043b 3703     		.2byte	0x337
 1324 043d 88000000 		.4byte	0x88
 1325 0441 93020000 		.4byte	.LLST18
 1326 0445 13       		.uleb128 0x13
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 40


 1327 0446 2C030000 		.4byte	.LASF50
 1328 044a 01       		.byte	0x1
 1329 044b 3703     		.2byte	0x337
 1330 044d 93000000 		.4byte	0x93
 1331 0451 B4020000 		.4byte	.LLST19
 1332 0455 14       		.uleb128 0x14
 1333 0456 39010000 		.4byte	.LASF55
 1334 045a 01       		.byte	0x1
 1335 045b 3903     		.2byte	0x339
 1336 045d A9000000 		.4byte	0xa9
 1337 0461 D2020000 		.4byte	.LLST20
 1338 0465 00       		.byte	0
 1339 0466 18       		.uleb128 0x18
 1340 0467 88000000 		.4byte	0x88
 1341 046b 76040000 		.4byte	0x476
 1342 046f 19       		.uleb128 0x19
 1343 0470 F1000000 		.4byte	0xf1
 1344 0474 00       		.byte	0
 1345 0475 00       		.byte	0
 1346 0476 1A       		.uleb128 0x1a
 1347 0477 96020000 		.4byte	.LASF62
 1348 047b 01       		.byte	0x1
 1349 047c 21       		.byte	0x21
 1350 047d 81040000 		.4byte	0x481
 1351 0481 1B       		.uleb128 0x1b
 1352 0482 66040000 		.4byte	0x466
 1353 0486 1C       		.uleb128 0x1c
 1354 0487 DF000000 		.4byte	.LASF56
 1355 048b 01       		.byte	0x1
 1356 048c 18       		.byte	0x18
 1357 048d 72000000 		.4byte	0x72
 1358 0491 05       		.uleb128 0x5
 1359 0492 03       		.byte	0x3
 1360 0493 00000000 		.4byte	ADC_initVar
 1361 0497 18       		.uleb128 0x18
 1362 0498 93000000 		.4byte	0x93
 1363 049c A7040000 		.4byte	0x4a7
 1364 04a0 19       		.uleb128 0x19
 1365 04a1 F1000000 		.4byte	0xf1
 1366 04a5 00       		.byte	0
 1367 04a6 00       		.byte	0
 1368 04a7 1C       		.uleb128 0x1c
 1369 04a8 5B020000 		.4byte	.LASF57
 1370 04ac 01       		.byte	0x1
 1371 04ad 19       		.byte	0x19
 1372 04ae B8040000 		.4byte	0x4b8
 1373 04b2 05       		.uleb128 0x5
 1374 04b3 03       		.byte	0x3
 1375 04b4 00000000 		.4byte	ADC_offset
 1376 04b8 06       		.uleb128 0x6
 1377 04b9 97040000 		.4byte	0x497
 1378 04bd 18       		.uleb128 0x18
 1379 04be 9E000000 		.4byte	0x9e
 1380 04c2 CD040000 		.4byte	0x4cd
 1381 04c6 19       		.uleb128 0x19
 1382 04c7 F1000000 		.4byte	0xf1
 1383 04cb 00       		.byte	0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 41


 1384 04cc 00       		.byte	0
 1385 04cd 1C       		.uleb128 0x1c
 1386 04ce A8000000 		.4byte	.LASF58
 1387 04d2 01       		.byte	0x1
 1388 04d3 1A       		.byte	0x1a
 1389 04d4 DE040000 		.4byte	0x4de
 1390 04d8 05       		.uleb128 0x5
 1391 04d9 03       		.byte	0x3
 1392 04da 00000000 		.4byte	ADC_countsPer10Volt
 1393 04de 06       		.uleb128 0x6
 1394 04df BD040000 		.4byte	0x4bd
 1395 04e3 1D       		.uleb128 0x1d
 1396 04e4 CD010000 		.4byte	.LASF63
 1397 04e8 03       		.byte	0x3
 1398 04e9 6D       		.byte	0x6d
 1399 04ea F9040000 		.4byte	0x4f9
 1400 04ee 1E       		.uleb128 0x1e
 1401 04ef 72000000 		.4byte	0x72
 1402 04f3 1E       		.uleb128 0x1e
 1403 04f4 72000000 		.4byte	0x72
 1404 04f8 00       		.byte	0
 1405 04f9 1F       		.uleb128 0x1f
 1406 04fa 5C010000 		.4byte	.LASF64
 1407 04fe 03       		.byte	0x3
 1408 04ff 6A       		.byte	0x6a
 1409 0500 DE000000 		.4byte	0xde
 1410 0504 13050000 		.4byte	0x513
 1411 0508 1E       		.uleb128 0x1e
 1412 0509 72000000 		.4byte	0x72
 1413 050d 1E       		.uleb128 0x1e
 1414 050e DE000000 		.4byte	0xde
 1415 0512 00       		.byte	0
 1416 0513 20       		.uleb128 0x20
 1417 0514 C2000000 		.4byte	.LASF65
 1418 0518 03       		.byte	0x3
 1419 0519 7C       		.byte	0x7c
 1420 051a 1E       		.uleb128 0x1e
 1421 051b 7D000000 		.4byte	0x7d
 1422 051f 00       		.byte	0
 1423 0520 00       		.byte	0
 1424              		.section	.debug_abbrev,"",%progbits
 1425              	.Ldebug_abbrev0:
 1426 0000 01       		.uleb128 0x1
 1427 0001 11       		.uleb128 0x11
 1428 0002 01       		.byte	0x1
 1429 0003 25       		.uleb128 0x25
 1430 0004 0E       		.uleb128 0xe
 1431 0005 13       		.uleb128 0x13
 1432 0006 0B       		.uleb128 0xb
 1433 0007 03       		.uleb128 0x3
 1434 0008 0E       		.uleb128 0xe
 1435 0009 1B       		.uleb128 0x1b
 1436 000a 0E       		.uleb128 0xe
 1437 000b 55       		.uleb128 0x55
 1438 000c 17       		.uleb128 0x17
 1439 000d 11       		.uleb128 0x11
 1440 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 42


 1441 000f 10       		.uleb128 0x10
 1442 0010 17       		.uleb128 0x17
 1443 0011 00       		.byte	0
 1444 0012 00       		.byte	0
 1445 0013 02       		.uleb128 0x2
 1446 0014 24       		.uleb128 0x24
 1447 0015 00       		.byte	0
 1448 0016 0B       		.uleb128 0xb
 1449 0017 0B       		.uleb128 0xb
 1450 0018 3E       		.uleb128 0x3e
 1451 0019 0B       		.uleb128 0xb
 1452 001a 03       		.uleb128 0x3
 1453 001b 0E       		.uleb128 0xe
 1454 001c 00       		.byte	0
 1455 001d 00       		.byte	0
 1456 001e 03       		.uleb128 0x3
 1457 001f 24       		.uleb128 0x24
 1458 0020 00       		.byte	0
 1459 0021 0B       		.uleb128 0xb
 1460 0022 0B       		.uleb128 0xb
 1461 0023 3E       		.uleb128 0x3e
 1462 0024 0B       		.uleb128 0xb
 1463 0025 03       		.uleb128 0x3
 1464 0026 08       		.uleb128 0x8
 1465 0027 00       		.byte	0
 1466 0028 00       		.byte	0
 1467 0029 04       		.uleb128 0x4
 1468 002a 16       		.uleb128 0x16
 1469 002b 00       		.byte	0
 1470 002c 03       		.uleb128 0x3
 1471 002d 0E       		.uleb128 0xe
 1472 002e 3A       		.uleb128 0x3a
 1473 002f 0B       		.uleb128 0xb
 1474 0030 3B       		.uleb128 0x3b
 1475 0031 0B       		.uleb128 0xb
 1476 0032 49       		.uleb128 0x49
 1477 0033 13       		.uleb128 0x13
 1478 0034 00       		.byte	0
 1479 0035 00       		.byte	0
 1480 0036 05       		.uleb128 0x5
 1481 0037 16       		.uleb128 0x16
 1482 0038 00       		.byte	0
 1483 0039 03       		.uleb128 0x3
 1484 003a 0E       		.uleb128 0xe
 1485 003b 3A       		.uleb128 0x3a
 1486 003c 0B       		.uleb128 0xb
 1487 003d 3B       		.uleb128 0x3b
 1488 003e 05       		.uleb128 0x5
 1489 003f 49       		.uleb128 0x49
 1490 0040 13       		.uleb128 0x13
 1491 0041 00       		.byte	0
 1492 0042 00       		.byte	0
 1493 0043 06       		.uleb128 0x6
 1494 0044 35       		.uleb128 0x35
 1495 0045 00       		.byte	0
 1496 0046 49       		.uleb128 0x49
 1497 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 43


 1498 0048 00       		.byte	0
 1499 0049 00       		.byte	0
 1500 004a 07       		.uleb128 0x7
 1501 004b 0F       		.uleb128 0xf
 1502 004c 00       		.byte	0
 1503 004d 0B       		.uleb128 0xb
 1504 004e 0B       		.uleb128 0xb
 1505 004f 49       		.uleb128 0x49
 1506 0050 13       		.uleb128 0x13
 1507 0051 00       		.byte	0
 1508 0052 00       		.byte	0
 1509 0053 08       		.uleb128 0x8
 1510 0054 15       		.uleb128 0x15
 1511 0055 00       		.byte	0
 1512 0056 27       		.uleb128 0x27
 1513 0057 19       		.uleb128 0x19
 1514 0058 00       		.byte	0
 1515 0059 00       		.byte	0
 1516 005a 09       		.uleb128 0x9
 1517 005b 2E       		.uleb128 0x2e
 1518 005c 01       		.byte	0x1
 1519 005d 3F       		.uleb128 0x3f
 1520 005e 19       		.uleb128 0x19
 1521 005f 03       		.uleb128 0x3
 1522 0060 0E       		.uleb128 0xe
 1523 0061 3A       		.uleb128 0x3a
 1524 0062 0B       		.uleb128 0xb
 1525 0063 3B       		.uleb128 0x3b
 1526 0064 0B       		.uleb128 0xb
 1527 0065 27       		.uleb128 0x27
 1528 0066 19       		.uleb128 0x19
 1529 0067 11       		.uleb128 0x11
 1530 0068 01       		.uleb128 0x1
 1531 0069 12       		.uleb128 0x12
 1532 006a 06       		.uleb128 0x6
 1533 006b 40       		.uleb128 0x40
 1534 006c 18       		.uleb128 0x18
 1535 006d 9742     		.uleb128 0x2117
 1536 006f 19       		.uleb128 0x19
 1537 0070 01       		.uleb128 0x1
 1538 0071 13       		.uleb128 0x13
 1539 0072 00       		.byte	0
 1540 0073 00       		.byte	0
 1541 0074 0A       		.uleb128 0xa
 1542 0075 34       		.uleb128 0x34
 1543 0076 00       		.byte	0
 1544 0077 03       		.uleb128 0x3
 1545 0078 0E       		.uleb128 0xe
 1546 0079 3A       		.uleb128 0x3a
 1547 007a 0B       		.uleb128 0xb
 1548 007b 3B       		.uleb128 0x3b
 1549 007c 0B       		.uleb128 0xb
 1550 007d 49       		.uleb128 0x49
 1551 007e 13       		.uleb128 0x13
 1552 007f 02       		.uleb128 0x2
 1553 0080 17       		.uleb128 0x17
 1554 0081 00       		.byte	0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 44


 1555 0082 00       		.byte	0
 1556 0083 0B       		.uleb128 0xb
 1557 0084 34       		.uleb128 0x34
 1558 0085 00       		.byte	0
 1559 0086 03       		.uleb128 0x3
 1560 0087 0E       		.uleb128 0xe
 1561 0088 3A       		.uleb128 0x3a
 1562 0089 0B       		.uleb128 0xb
 1563 008a 3B       		.uleb128 0x3b
 1564 008b 0B       		.uleb128 0xb
 1565 008c 49       		.uleb128 0x49
 1566 008d 13       		.uleb128 0x13
 1567 008e 1C       		.uleb128 0x1c
 1568 008f 05       		.uleb128 0x5
 1569 0090 00       		.byte	0
 1570 0091 00       		.byte	0
 1571 0092 0C       		.uleb128 0xc
 1572 0093 898201   		.uleb128 0x4109
 1573 0096 01       		.byte	0x1
 1574 0097 11       		.uleb128 0x11
 1575 0098 01       		.uleb128 0x1
 1576 0099 31       		.uleb128 0x31
 1577 009a 13       		.uleb128 0x13
 1578 009b 01       		.uleb128 0x1
 1579 009c 13       		.uleb128 0x13
 1580 009d 00       		.byte	0
 1581 009e 00       		.byte	0
 1582 009f 0D       		.uleb128 0xd
 1583 00a0 8A8201   		.uleb128 0x410a
 1584 00a3 00       		.byte	0
 1585 00a4 02       		.uleb128 0x2
 1586 00a5 18       		.uleb128 0x18
 1587 00a6 9142     		.uleb128 0x2111
 1588 00a8 18       		.uleb128 0x18
 1589 00a9 00       		.byte	0
 1590 00aa 00       		.byte	0
 1591 00ab 0E       		.uleb128 0xe
 1592 00ac 898201   		.uleb128 0x4109
 1593 00af 01       		.byte	0x1
 1594 00b0 11       		.uleb128 0x11
 1595 00b1 01       		.uleb128 0x1
 1596 00b2 31       		.uleb128 0x31
 1597 00b3 13       		.uleb128 0x13
 1598 00b4 00       		.byte	0
 1599 00b5 00       		.byte	0
 1600 00b6 0F       		.uleb128 0xf
 1601 00b7 2E       		.uleb128 0x2e
 1602 00b8 01       		.byte	0x1
 1603 00b9 3F       		.uleb128 0x3f
 1604 00ba 19       		.uleb128 0x19
 1605 00bb 03       		.uleb128 0x3
 1606 00bc 0E       		.uleb128 0xe
 1607 00bd 3A       		.uleb128 0x3a
 1608 00be 0B       		.uleb128 0xb
 1609 00bf 3B       		.uleb128 0x3b
 1610 00c0 05       		.uleb128 0x5
 1611 00c1 27       		.uleb128 0x27
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 45


 1612 00c2 19       		.uleb128 0x19
 1613 00c3 11       		.uleb128 0x11
 1614 00c4 01       		.uleb128 0x1
 1615 00c5 12       		.uleb128 0x12
 1616 00c6 06       		.uleb128 0x6
 1617 00c7 40       		.uleb128 0x40
 1618 00c8 18       		.uleb128 0x18
 1619 00c9 9742     		.uleb128 0x2117
 1620 00cb 19       		.uleb128 0x19
 1621 00cc 01       		.uleb128 0x1
 1622 00cd 13       		.uleb128 0x13
 1623 00ce 00       		.byte	0
 1624 00cf 00       		.byte	0
 1625 00d0 10       		.uleb128 0x10
 1626 00d1 898201   		.uleb128 0x4109
 1627 00d4 00       		.byte	0
 1628 00d5 11       		.uleb128 0x11
 1629 00d6 01       		.uleb128 0x1
 1630 00d7 31       		.uleb128 0x31
 1631 00d8 13       		.uleb128 0x13
 1632 00d9 00       		.byte	0
 1633 00da 00       		.byte	0
 1634 00db 11       		.uleb128 0x11
 1635 00dc 2E       		.uleb128 0x2e
 1636 00dd 00       		.byte	0
 1637 00de 3F       		.uleb128 0x3f
 1638 00df 19       		.uleb128 0x19
 1639 00e0 03       		.uleb128 0x3
 1640 00e1 0E       		.uleb128 0xe
 1641 00e2 3A       		.uleb128 0x3a
 1642 00e3 0B       		.uleb128 0xb
 1643 00e4 3B       		.uleb128 0x3b
 1644 00e5 05       		.uleb128 0x5
 1645 00e6 27       		.uleb128 0x27
 1646 00e7 19       		.uleb128 0x19
 1647 00e8 11       		.uleb128 0x11
 1648 00e9 01       		.uleb128 0x1
 1649 00ea 12       		.uleb128 0x12
 1650 00eb 06       		.uleb128 0x6
 1651 00ec 40       		.uleb128 0x40
 1652 00ed 18       		.uleb128 0x18
 1653 00ee 9742     		.uleb128 0x2117
 1654 00f0 19       		.uleb128 0x19
 1655 00f1 00       		.byte	0
 1656 00f2 00       		.byte	0
 1657 00f3 12       		.uleb128 0x12
 1658 00f4 2E       		.uleb128 0x2e
 1659 00f5 01       		.byte	0x1
 1660 00f6 3F       		.uleb128 0x3f
 1661 00f7 19       		.uleb128 0x19
 1662 00f8 03       		.uleb128 0x3
 1663 00f9 0E       		.uleb128 0xe
 1664 00fa 3A       		.uleb128 0x3a
 1665 00fb 0B       		.uleb128 0xb
 1666 00fc 3B       		.uleb128 0x3b
 1667 00fd 05       		.uleb128 0x5
 1668 00fe 27       		.uleb128 0x27
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 46


 1669 00ff 19       		.uleb128 0x19
 1670 0100 49       		.uleb128 0x49
 1671 0101 13       		.uleb128 0x13
 1672 0102 11       		.uleb128 0x11
 1673 0103 01       		.uleb128 0x1
 1674 0104 12       		.uleb128 0x12
 1675 0105 06       		.uleb128 0x6
 1676 0106 40       		.uleb128 0x40
 1677 0107 18       		.uleb128 0x18
 1678 0108 9742     		.uleb128 0x2117
 1679 010a 19       		.uleb128 0x19
 1680 010b 01       		.uleb128 0x1
 1681 010c 13       		.uleb128 0x13
 1682 010d 00       		.byte	0
 1683 010e 00       		.byte	0
 1684 010f 13       		.uleb128 0x13
 1685 0110 05       		.uleb128 0x5
 1686 0111 00       		.byte	0
 1687 0112 03       		.uleb128 0x3
 1688 0113 0E       		.uleb128 0xe
 1689 0114 3A       		.uleb128 0x3a
 1690 0115 0B       		.uleb128 0xb
 1691 0116 3B       		.uleb128 0x3b
 1692 0117 05       		.uleb128 0x5
 1693 0118 49       		.uleb128 0x49
 1694 0119 13       		.uleb128 0x13
 1695 011a 02       		.uleb128 0x2
 1696 011b 17       		.uleb128 0x17
 1697 011c 00       		.byte	0
 1698 011d 00       		.byte	0
 1699 011e 14       		.uleb128 0x14
 1700 011f 34       		.uleb128 0x34
 1701 0120 00       		.byte	0
 1702 0121 03       		.uleb128 0x3
 1703 0122 0E       		.uleb128 0xe
 1704 0123 3A       		.uleb128 0x3a
 1705 0124 0B       		.uleb128 0xb
 1706 0125 3B       		.uleb128 0x3b
 1707 0126 05       		.uleb128 0x5
 1708 0127 49       		.uleb128 0x49
 1709 0128 13       		.uleb128 0x13
 1710 0129 02       		.uleb128 0x2
 1711 012a 17       		.uleb128 0x17
 1712 012b 00       		.byte	0
 1713 012c 00       		.byte	0
 1714 012d 15       		.uleb128 0x15
 1715 012e 34       		.uleb128 0x34
 1716 012f 00       		.byte	0
 1717 0130 03       		.uleb128 0x3
 1718 0131 0E       		.uleb128 0xe
 1719 0132 3A       		.uleb128 0x3a
 1720 0133 0B       		.uleb128 0xb
 1721 0134 3B       		.uleb128 0x3b
 1722 0135 05       		.uleb128 0x5
 1723 0136 49       		.uleb128 0x49
 1724 0137 13       		.uleb128 0x13
 1725 0138 02       		.uleb128 0x2
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 47


 1726 0139 18       		.uleb128 0x18
 1727 013a 00       		.byte	0
 1728 013b 00       		.byte	0
 1729 013c 16       		.uleb128 0x16
 1730 013d 05       		.uleb128 0x5
 1731 013e 00       		.byte	0
 1732 013f 03       		.uleb128 0x3
 1733 0140 0E       		.uleb128 0xe
 1734 0141 3A       		.uleb128 0x3a
 1735 0142 0B       		.uleb128 0xb
 1736 0143 3B       		.uleb128 0x3b
 1737 0144 05       		.uleb128 0x5
 1738 0145 49       		.uleb128 0x49
 1739 0146 13       		.uleb128 0x13
 1740 0147 02       		.uleb128 0x2
 1741 0148 18       		.uleb128 0x18
 1742 0149 00       		.byte	0
 1743 014a 00       		.byte	0
 1744 014b 17       		.uleb128 0x17
 1745 014c 2E       		.uleb128 0x2e
 1746 014d 01       		.byte	0x1
 1747 014e 3F       		.uleb128 0x3f
 1748 014f 19       		.uleb128 0x19
 1749 0150 03       		.uleb128 0x3
 1750 0151 0E       		.uleb128 0xe
 1751 0152 3A       		.uleb128 0x3a
 1752 0153 0B       		.uleb128 0xb
 1753 0154 3B       		.uleb128 0x3b
 1754 0155 05       		.uleb128 0x5
 1755 0156 27       		.uleb128 0x27
 1756 0157 19       		.uleb128 0x19
 1757 0158 49       		.uleb128 0x49
 1758 0159 13       		.uleb128 0x13
 1759 015a 11       		.uleb128 0x11
 1760 015b 01       		.uleb128 0x1
 1761 015c 12       		.uleb128 0x12
 1762 015d 06       		.uleb128 0x6
 1763 015e 40       		.uleb128 0x40
 1764 015f 18       		.uleb128 0x18
 1765 0160 9642     		.uleb128 0x2116
 1766 0162 19       		.uleb128 0x19
 1767 0163 01       		.uleb128 0x1
 1768 0164 13       		.uleb128 0x13
 1769 0165 00       		.byte	0
 1770 0166 00       		.byte	0
 1771 0167 18       		.uleb128 0x18
 1772 0168 01       		.uleb128 0x1
 1773 0169 01       		.byte	0x1
 1774 016a 49       		.uleb128 0x49
 1775 016b 13       		.uleb128 0x13
 1776 016c 01       		.uleb128 0x1
 1777 016d 13       		.uleb128 0x13
 1778 016e 00       		.byte	0
 1779 016f 00       		.byte	0
 1780 0170 19       		.uleb128 0x19
 1781 0171 21       		.uleb128 0x21
 1782 0172 00       		.byte	0
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 48


 1783 0173 49       		.uleb128 0x49
 1784 0174 13       		.uleb128 0x13
 1785 0175 2F       		.uleb128 0x2f
 1786 0176 0B       		.uleb128 0xb
 1787 0177 00       		.byte	0
 1788 0178 00       		.byte	0
 1789 0179 1A       		.uleb128 0x1a
 1790 017a 34       		.uleb128 0x34
 1791 017b 00       		.byte	0
 1792 017c 03       		.uleb128 0x3
 1793 017d 0E       		.uleb128 0xe
 1794 017e 3A       		.uleb128 0x3a
 1795 017f 0B       		.uleb128 0xb
 1796 0180 3B       		.uleb128 0x3b
 1797 0181 0B       		.uleb128 0xb
 1798 0182 49       		.uleb128 0x49
 1799 0183 13       		.uleb128 0x13
 1800 0184 00       		.byte	0
 1801 0185 00       		.byte	0
 1802 0186 1B       		.uleb128 0x1b
 1803 0187 26       		.uleb128 0x26
 1804 0188 00       		.byte	0
 1805 0189 49       		.uleb128 0x49
 1806 018a 13       		.uleb128 0x13
 1807 018b 00       		.byte	0
 1808 018c 00       		.byte	0
 1809 018d 1C       		.uleb128 0x1c
 1810 018e 34       		.uleb128 0x34
 1811 018f 00       		.byte	0
 1812 0190 03       		.uleb128 0x3
 1813 0191 0E       		.uleb128 0xe
 1814 0192 3A       		.uleb128 0x3a
 1815 0193 0B       		.uleb128 0xb
 1816 0194 3B       		.uleb128 0x3b
 1817 0195 0B       		.uleb128 0xb
 1818 0196 49       		.uleb128 0x49
 1819 0197 13       		.uleb128 0x13
 1820 0198 3F       		.uleb128 0x3f
 1821 0199 19       		.uleb128 0x19
 1822 019a 02       		.uleb128 0x2
 1823 019b 18       		.uleb128 0x18
 1824 019c 00       		.byte	0
 1825 019d 00       		.byte	0
 1826 019e 1D       		.uleb128 0x1d
 1827 019f 2E       		.uleb128 0x2e
 1828 01a0 01       		.byte	0x1
 1829 01a1 3F       		.uleb128 0x3f
 1830 01a2 19       		.uleb128 0x19
 1831 01a3 03       		.uleb128 0x3
 1832 01a4 0E       		.uleb128 0xe
 1833 01a5 3A       		.uleb128 0x3a
 1834 01a6 0B       		.uleb128 0xb
 1835 01a7 3B       		.uleb128 0x3b
 1836 01a8 0B       		.uleb128 0xb
 1837 01a9 27       		.uleb128 0x27
 1838 01aa 19       		.uleb128 0x19
 1839 01ab 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 49


 1840 01ac 19       		.uleb128 0x19
 1841 01ad 01       		.uleb128 0x1
 1842 01ae 13       		.uleb128 0x13
 1843 01af 00       		.byte	0
 1844 01b0 00       		.byte	0
 1845 01b1 1E       		.uleb128 0x1e
 1846 01b2 05       		.uleb128 0x5
 1847 01b3 00       		.byte	0
 1848 01b4 49       		.uleb128 0x49
 1849 01b5 13       		.uleb128 0x13
 1850 01b6 00       		.byte	0
 1851 01b7 00       		.byte	0
 1852 01b8 1F       		.uleb128 0x1f
 1853 01b9 2E       		.uleb128 0x2e
 1854 01ba 01       		.byte	0x1
 1855 01bb 3F       		.uleb128 0x3f
 1856 01bc 19       		.uleb128 0x19
 1857 01bd 03       		.uleb128 0x3
 1858 01be 0E       		.uleb128 0xe
 1859 01bf 3A       		.uleb128 0x3a
 1860 01c0 0B       		.uleb128 0xb
 1861 01c1 3B       		.uleb128 0x3b
 1862 01c2 0B       		.uleb128 0xb
 1863 01c3 27       		.uleb128 0x27
 1864 01c4 19       		.uleb128 0x19
 1865 01c5 49       		.uleb128 0x49
 1866 01c6 13       		.uleb128 0x13
 1867 01c7 3C       		.uleb128 0x3c
 1868 01c8 19       		.uleb128 0x19
 1869 01c9 01       		.uleb128 0x1
 1870 01ca 13       		.uleb128 0x13
 1871 01cb 00       		.byte	0
 1872 01cc 00       		.byte	0
 1873 01cd 20       		.uleb128 0x20
 1874 01ce 2E       		.uleb128 0x2e
 1875 01cf 01       		.byte	0x1
 1876 01d0 3F       		.uleb128 0x3f
 1877 01d1 19       		.uleb128 0x19
 1878 01d2 03       		.uleb128 0x3
 1879 01d3 0E       		.uleb128 0xe
 1880 01d4 3A       		.uleb128 0x3a
 1881 01d5 0B       		.uleb128 0xb
 1882 01d6 3B       		.uleb128 0x3b
 1883 01d7 0B       		.uleb128 0xb
 1884 01d8 27       		.uleb128 0x27
 1885 01d9 19       		.uleb128 0x19
 1886 01da 3C       		.uleb128 0x3c
 1887 01db 19       		.uleb128 0x19
 1888 01dc 00       		.byte	0
 1889 01dd 00       		.byte	0
 1890 01de 00       		.byte	0
 1891              		.section	.debug_loc,"",%progbits
 1892              	.Ldebug_loc0:
 1893              	.LLST0:
 1894 0000 78000000 		.4byte	.LVL5
 1895 0004 8A000000 		.4byte	.LVL7
 1896 0008 0200     		.2byte	0x2
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 50


 1897 000a 30       		.byte	0x30
 1898 000b 9F       		.byte	0x9f
 1899 000c 8A000000 		.4byte	.LVL7
 1900 0010 F4000000 		.4byte	.LFE1
 1901 0014 0200     		.2byte	0x2
 1902 0016 31       		.byte	0x31
 1903 0017 9F       		.byte	0x9f
 1904 0018 00000000 		.4byte	0
 1905 001c 00000000 		.4byte	0
 1906              	.LLST1:
 1907 0020 72000000 		.4byte	.LVL2
 1908 0024 74000000 		.4byte	.LVL3
 1909 0028 0100     		.2byte	0x1
 1910 002a 54       		.byte	0x54
 1911 002b 74000000 		.4byte	.LVL3
 1912 002f 76000000 		.4byte	.LVL4
 1913 0033 0100     		.2byte	0x1
 1914 0035 50       		.byte	0x50
 1915 0036 76000000 		.4byte	.LVL4
 1916 003a 78000000 		.4byte	.LVL5
 1917 003e 0100     		.2byte	0x1
 1918 0040 51       		.byte	0x51
 1919 0041 78000000 		.4byte	.LVL5
 1920 0045 F4000000 		.4byte	.LFE1
 1921 0049 0400     		.2byte	0x4
 1922 004b 0A       		.byte	0xa
 1923 004c 0004     		.2byte	0x400
 1924 004e 9F       		.byte	0x9f
 1925 004f 00000000 		.4byte	0
 1926 0053 00000000 		.4byte	0
 1927              	.LLST2:
 1928 0057 00000000 		.4byte	.LVL11
 1929 005b 04000000 		.4byte	.LVL12
 1930 005f 0100     		.2byte	0x1
 1931 0061 50       		.byte	0x50
 1932 0062 04000000 		.4byte	.LVL12
 1933 0066 24000000 		.4byte	.LFE6
 1934 006a 0100     		.2byte	0x1
 1935 006c 51       		.byte	0x51
 1936 006d 00000000 		.4byte	0
 1937 0071 00000000 		.4byte	0
 1938              	.LLST3:
 1939 0075 00000000 		.4byte	.LVL11
 1940 0079 08000000 		.4byte	.LVL13
 1941 007d 0200     		.2byte	0x2
 1942 007f 30       		.byte	0x30
 1943 0080 9F       		.byte	0x9f
 1944 0081 10000000 		.4byte	.LVL14
 1945 0085 1C000000 		.4byte	.LVL15
 1946 0089 0100     		.2byte	0x1
 1947 008b 50       		.byte	0x50
 1948 008c 00000000 		.4byte	0
 1949 0090 00000000 		.4byte	0
 1950              	.LLST4:
 1951 0094 00000000 		.4byte	.LVL16
 1952 0098 0E000000 		.4byte	.LVL18
 1953 009c 0100     		.2byte	0x1
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 51


 1954 009e 50       		.byte	0x50
 1955 009f 0E000000 		.4byte	.LVL18
 1956 00a3 14000000 		.4byte	.LFE7
 1957 00a7 0400     		.2byte	0x4
 1958 00a9 F3       		.byte	0xf3
 1959 00aa 01       		.uleb128 0x1
 1960 00ab 50       		.byte	0x50
 1961 00ac 9F       		.byte	0x9f
 1962 00ad 00000000 		.4byte	0
 1963 00b1 00000000 		.4byte	0
 1964              	.LLST5:
 1965 00b5 00000000 		.4byte	.LVL19
 1966 00b9 04000000 		.4byte	.LVL20
 1967 00bd 0100     		.2byte	0x1
 1968 00bf 50       		.byte	0x50
 1969 00c0 04000000 		.4byte	.LVL20
 1970 00c4 10000000 		.4byte	.LFE8
 1971 00c8 0400     		.2byte	0x4
 1972 00ca F3       		.byte	0xf3
 1973 00cb 01       		.uleb128 0x1
 1974 00cc 50       		.byte	0x50
 1975 00cd 9F       		.byte	0x9f
 1976 00ce 00000000 		.4byte	0
 1977 00d2 00000000 		.4byte	0
 1978              	.LLST6:
 1979 00d6 00000000 		.4byte	.LVL21
 1980 00da 04000000 		.4byte	.LVL22
 1981 00de 0100     		.2byte	0x1
 1982 00e0 50       		.byte	0x50
 1983 00e1 04000000 		.4byte	.LVL22
 1984 00e5 18000000 		.4byte	.LFE9
 1985 00e9 0400     		.2byte	0x4
 1986 00eb F3       		.byte	0xf3
 1987 00ec 01       		.uleb128 0x1
 1988 00ed 50       		.byte	0x50
 1989 00ee 9F       		.byte	0x9f
 1990 00ef 00000000 		.4byte	0
 1991 00f3 00000000 		.4byte	0
 1992              	.LLST7:
 1993 00f7 00000000 		.4byte	.LVL23
 1994 00fb 04000000 		.4byte	.LVL24
 1995 00ff 0100     		.2byte	0x1
 1996 0101 50       		.byte	0x50
 1997 0102 04000000 		.4byte	.LVL24
 1998 0106 18000000 		.4byte	.LFE10
 1999 010a 0400     		.2byte	0x4
 2000 010c F3       		.byte	0xf3
 2001 010d 01       		.uleb128 0x1
 2002 010e 50       		.byte	0x50
 2003 010f 9F       		.byte	0x9f
 2004 0110 00000000 		.4byte	0
 2005 0114 00000000 		.4byte	0
 2006              	.LLST8:
 2007 0118 00000000 		.4byte	.LVL25
 2008 011c 04000000 		.4byte	.LVL26
 2009 0120 0100     		.2byte	0x1
 2010 0122 50       		.byte	0x50
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 52


 2011 0123 04000000 		.4byte	.LVL26
 2012 0127 10000000 		.4byte	.LFE11
 2013 012b 0400     		.2byte	0x4
 2014 012d F3       		.byte	0xf3
 2015 012e 01       		.uleb128 0x1
 2016 012f 50       		.byte	0x50
 2017 0130 9F       		.byte	0x9f
 2018 0131 00000000 		.4byte	0
 2019 0135 00000000 		.4byte	0
 2020              	.LLST9:
 2021 0139 00000000 		.4byte	.LVL27
 2022 013d 04000000 		.4byte	.LVL28
 2023 0141 0100     		.2byte	0x1
 2024 0143 50       		.byte	0x50
 2025 0144 04000000 		.4byte	.LVL28
 2026 0148 10000000 		.4byte	.LFE12
 2027 014c 0400     		.2byte	0x4
 2028 014e F3       		.byte	0xf3
 2029 014f 01       		.uleb128 0x1
 2030 0150 50       		.byte	0x50
 2031 0151 9F       		.byte	0x9f
 2032 0152 00000000 		.4byte	0
 2033 0156 00000000 		.4byte	0
 2034              	.LLST10:
 2035 015a 00000000 		.4byte	.LVL29
 2036 015e 04000000 		.4byte	.LVL30
 2037 0162 0100     		.2byte	0x1
 2038 0164 50       		.byte	0x50
 2039 0165 04000000 		.4byte	.LVL30
 2040 0169 0C000000 		.4byte	.LFE13
 2041 016d 0400     		.2byte	0x4
 2042 016f F3       		.byte	0xf3
 2043 0170 01       		.uleb128 0x1
 2044 0171 50       		.byte	0x50
 2045 0172 9F       		.byte	0x9f
 2046 0173 00000000 		.4byte	0
 2047 0177 00000000 		.4byte	0
 2048              	.LLST11:
 2049 017b 00000000 		.4byte	.LVL31
 2050 017f 04000000 		.4byte	.LVL32
 2051 0183 0100     		.2byte	0x1
 2052 0185 50       		.byte	0x50
 2053 0186 04000000 		.4byte	.LVL32
 2054 018a 0C000000 		.4byte	.LFE14
 2055 018e 0400     		.2byte	0x4
 2056 0190 F3       		.byte	0xf3
 2057 0191 01       		.uleb128 0x1
 2058 0192 50       		.byte	0x50
 2059 0193 9F       		.byte	0x9f
 2060 0194 00000000 		.4byte	0
 2061 0198 00000000 		.4byte	0
 2062              	.LLST12:
 2063 019c 00000000 		.4byte	.LVL33
 2064 01a0 1C000000 		.4byte	.LVL37
 2065 01a4 0100     		.2byte	0x1
 2066 01a6 50       		.byte	0x50
 2067 01a7 1C000000 		.4byte	.LVL37
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 53


 2068 01ab 22000000 		.4byte	.LVL38
 2069 01af 0400     		.2byte	0x4
 2070 01b1 F3       		.byte	0xf3
 2071 01b2 01       		.uleb128 0x1
 2072 01b3 50       		.byte	0x50
 2073 01b4 9F       		.byte	0x9f
 2074 01b5 22000000 		.4byte	.LVL38
 2075 01b9 26000000 		.4byte	.LVL40
 2076 01bd 0100     		.2byte	0x1
 2077 01bf 50       		.byte	0x50
 2078 01c0 26000000 		.4byte	.LVL40
 2079 01c4 44000000 		.4byte	.LFE15
 2080 01c8 0400     		.2byte	0x4
 2081 01ca F3       		.byte	0xf3
 2082 01cb 01       		.uleb128 0x1
 2083 01cc 50       		.byte	0x50
 2084 01cd 9F       		.byte	0x9f
 2085 01ce 00000000 		.4byte	0
 2086 01d2 00000000 		.4byte	0
 2087              	.LLST13:
 2088 01d6 00000000 		.4byte	.LVL33
 2089 01da 0A000000 		.4byte	.LVL34
 2090 01de 0100     		.2byte	0x1
 2091 01e0 51       		.byte	0x51
 2092 01e1 0A000000 		.4byte	.LVL34
 2093 01e5 0E000000 		.4byte	.LVL35
 2094 01e9 0400     		.2byte	0x4
 2095 01eb F3       		.byte	0xf3
 2096 01ec 01       		.uleb128 0x1
 2097 01ed 51       		.byte	0x51
 2098 01ee 9F       		.byte	0x9f
 2099 01ef 0E000000 		.4byte	.LVL35
 2100 01f3 1A000000 		.4byte	.LVL36
 2101 01f7 0100     		.2byte	0x1
 2102 01f9 51       		.byte	0x51
 2103 01fa 22000000 		.4byte	.LVL38
 2104 01fe 24000000 		.4byte	.LVL39
 2105 0202 0100     		.2byte	0x1
 2106 0204 51       		.byte	0x51
 2107 0205 00000000 		.4byte	0
 2108 0209 00000000 		.4byte	0
 2109              	.LLST14:
 2110 020d 2E000000 		.4byte	.LVL41
 2111 0211 30000000 		.4byte	.LVL42
 2112 0215 0900     		.2byte	0x9
 2113 0217 74       		.byte	0x74
 2114 0218 00       		.sleb128 0
 2115 0219 70       		.byte	0x70
 2116 021a 00       		.sleb128 0
 2117 021b 22       		.byte	0x22
 2118 021c 71       		.byte	0x71
 2119 021d 00       		.sleb128 0
 2120 021e 1B       		.byte	0x1b
 2121 021f 9F       		.byte	0x9f
 2122 0220 00000000 		.4byte	0
 2123 0224 00000000 		.4byte	0
 2124              	.LLST15:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 54


 2125 0228 00000000 		.4byte	.LVL44
 2126 022c 0E000000 		.4byte	.LVL46
 2127 0230 0100     		.2byte	0x1
 2128 0232 50       		.byte	0x50
 2129 0233 0E000000 		.4byte	.LVL46
 2130 0237 38000000 		.4byte	.LFE16
 2131 023b 0400     		.2byte	0x4
 2132 023d F3       		.byte	0xf3
 2133 023e 01       		.uleb128 0x1
 2134 023f 50       		.byte	0x50
 2135 0240 9F       		.byte	0x9f
 2136 0241 00000000 		.4byte	0
 2137 0245 00000000 		.4byte	0
 2138              	.LLST16:
 2139 0249 00000000 		.4byte	.LVL44
 2140 024d 0A000000 		.4byte	.LVL45
 2141 0251 0100     		.2byte	0x1
 2142 0253 51       		.byte	0x51
 2143 0254 0A000000 		.4byte	.LVL45
 2144 0258 18000000 		.4byte	.LVL48
 2145 025c 0100     		.2byte	0x1
 2146 025e 51       		.byte	0x51
 2147 025f 00000000 		.4byte	0
 2148 0263 00000000 		.4byte	0
 2149              	.LLST17:
 2150 0267 10000000 		.4byte	.LVL47
 2151 026b 18000000 		.4byte	.LVL48
 2152 026f 1A00     		.2byte	0x1a
 2153 0271 71       		.byte	0x71
 2154 0272 00       		.sleb128 0
 2155 0273 F7       		.byte	0xf7
 2156 0274 41       		.uleb128 0x41
 2157 0275 F7       		.byte	0xf7
 2158 0276 25       		.uleb128 0x25
 2159 0277 0C       		.byte	0xc
 2160 0278 80969800 		.4byte	0x989680
 2161 027c F7       		.byte	0xf7
 2162 027d 25       		.uleb128 0x25
 2163 027e 1E       		.byte	0x1e
 2164 027f F7       		.byte	0xf7
 2165 0280 33       		.uleb128 0x33
 2166 0281 74       		.byte	0x74
 2167 0282 00       		.sleb128 0
 2168 0283 F7       		.byte	0xf7
 2169 0284 3A       		.uleb128 0x3a
 2170 0285 F7       		.byte	0xf7
 2171 0286 33       		.uleb128 0x33
 2172 0287 1B       		.byte	0x1b
 2173 0288 F7       		.byte	0xf7
 2174 0289 25       		.uleb128 0x25
 2175 028a 9F       		.byte	0x9f
 2176 028b 00000000 		.4byte	0
 2177 028f 00000000 		.4byte	0
 2178              	.LLST18:
 2179 0293 00000000 		.4byte	.LVL51
 2180 0297 0A000000 		.4byte	.LVL52
 2181 029b 0100     		.2byte	0x1
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 55


 2182 029d 50       		.byte	0x50
 2183 029e 0A000000 		.4byte	.LVL52
 2184 02a2 3C000000 		.4byte	.LFE17
 2185 02a6 0400     		.2byte	0x4
 2186 02a8 F3       		.byte	0xf3
 2187 02a9 01       		.uleb128 0x1
 2188 02aa 50       		.byte	0x50
 2189 02ab 9F       		.byte	0x9f
 2190 02ac 00000000 		.4byte	0
 2191 02b0 00000000 		.4byte	0
 2192              	.LLST19:
 2193 02b4 00000000 		.4byte	.LVL51
 2194 02b8 0C000000 		.4byte	.LVL53
 2195 02bc 0100     		.2byte	0x1
 2196 02be 51       		.byte	0x51
 2197 02bf 0C000000 		.4byte	.LVL53
 2198 02c3 15000000 		.4byte	.LVL55-1
 2199 02c7 0100     		.2byte	0x1
 2200 02c9 51       		.byte	0x51
 2201 02ca 00000000 		.4byte	0
 2202 02ce 00000000 		.4byte	0
 2203              	.LLST20:
 2204 02d2 10000000 		.4byte	.LVL54
 2205 02d6 15000000 		.4byte	.LVL55-1
 2206 02da 1600     		.2byte	0x16
 2207 02dc 71       		.byte	0x71
 2208 02dd 00       		.sleb128 0
 2209 02de F7       		.byte	0xf7
 2210 02df 41       		.uleb128 0x41
 2211 02e0 F7       		.byte	0xf7
 2212 02e1 2C       		.uleb128 0x2c
 2213 02e2 F4       		.byte	0xf4
 2214 02e3 2C       		.uleb128 0x2c
 2215 02e4 04       		.byte	0x4
 2216 02e5 00002041 		.4byte	0x41200000
 2217 02e9 1E       		.byte	0x1e
 2218 02ea 75       		.byte	0x75
 2219 02eb 00       		.sleb128 0
 2220 02ec F7       		.byte	0xf7
 2221 02ed 3A       		.uleb128 0x3a
 2222 02ee F7       		.byte	0xf7
 2223 02ef 2C       		.uleb128 0x2c
 2224 02f0 1B       		.byte	0x1b
 2225 02f1 9F       		.byte	0x9f
 2226 02f2 00000000 		.4byte	0
 2227 02f6 00000000 		.4byte	0
 2228              		.section	.debug_aranges,"",%progbits
 2229 0000 A4000000 		.4byte	0xa4
 2230 0004 0200     		.2byte	0x2
 2231 0006 00000000 		.4byte	.Ldebug_info0
 2232 000a 04       		.byte	0x4
 2233 000b 00       		.byte	0
 2234 000c 0000     		.2byte	0
 2235 000e 0000     		.2byte	0
 2236 0010 00000000 		.4byte	.LFB1
 2237 0014 F4000000 		.4byte	.LFE1-.LFB1
 2238 0018 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 56


 2239 001c 20000000 		.4byte	.LFE2-.LFB2
 2240 0020 00000000 		.4byte	.LFB0
 2241 0024 1C000000 		.4byte	.LFE0-.LFB0
 2242 0028 00000000 		.4byte	.LFB3
 2243 002c 10000000 		.4byte	.LFE3-.LFB3
 2244 0030 00000000 		.4byte	.LFB4
 2245 0034 14000000 		.4byte	.LFE4-.LFB4
 2246 0038 00000000 		.4byte	.LFB5
 2247 003c 14000000 		.4byte	.LFE5-.LFB5
 2248 0040 00000000 		.4byte	.LFB6
 2249 0044 24000000 		.4byte	.LFE6-.LFB6
 2250 0048 00000000 		.4byte	.LFB7
 2251 004c 14000000 		.4byte	.LFE7-.LFB7
 2252 0050 00000000 		.4byte	.LFB8
 2253 0054 10000000 		.4byte	.LFE8-.LFB8
 2254 0058 00000000 		.4byte	.LFB9
 2255 005c 18000000 		.4byte	.LFE9-.LFB9
 2256 0060 00000000 		.4byte	.LFB10
 2257 0064 18000000 		.4byte	.LFE10-.LFB10
 2258 0068 00000000 		.4byte	.LFB11
 2259 006c 10000000 		.4byte	.LFE11-.LFB11
 2260 0070 00000000 		.4byte	.LFB12
 2261 0074 10000000 		.4byte	.LFE12-.LFB12
 2262 0078 00000000 		.4byte	.LFB13
 2263 007c 0C000000 		.4byte	.LFE13-.LFB13
 2264 0080 00000000 		.4byte	.LFB14
 2265 0084 0C000000 		.4byte	.LFE14-.LFB14
 2266 0088 00000000 		.4byte	.LFB15
 2267 008c 44000000 		.4byte	.LFE15-.LFB15
 2268 0090 00000000 		.4byte	.LFB16
 2269 0094 38000000 		.4byte	.LFE16-.LFB16
 2270 0098 00000000 		.4byte	.LFB17
 2271 009c 3C000000 		.4byte	.LFE17-.LFB17
 2272 00a0 00000000 		.4byte	0
 2273 00a4 00000000 		.4byte	0
 2274              		.section	.debug_ranges,"",%progbits
 2275              	.Ldebug_ranges0:
 2276 0000 00000000 		.4byte	.LFB1
 2277 0004 F4000000 		.4byte	.LFE1
 2278 0008 00000000 		.4byte	.LFB2
 2279 000c 20000000 		.4byte	.LFE2
 2280 0010 00000000 		.4byte	.LFB0
 2281 0014 1C000000 		.4byte	.LFE0
 2282 0018 00000000 		.4byte	.LFB3
 2283 001c 10000000 		.4byte	.LFE3
 2284 0020 00000000 		.4byte	.LFB4
 2285 0024 14000000 		.4byte	.LFE4
 2286 0028 00000000 		.4byte	.LFB5
 2287 002c 14000000 		.4byte	.LFE5
 2288 0030 00000000 		.4byte	.LFB6
 2289 0034 24000000 		.4byte	.LFE6
 2290 0038 00000000 		.4byte	.LFB7
 2291 003c 14000000 		.4byte	.LFE7
 2292 0040 00000000 		.4byte	.LFB8
 2293 0044 10000000 		.4byte	.LFE8
 2294 0048 00000000 		.4byte	.LFB9
 2295 004c 18000000 		.4byte	.LFE9
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 57


 2296 0050 00000000 		.4byte	.LFB10
 2297 0054 18000000 		.4byte	.LFE10
 2298 0058 00000000 		.4byte	.LFB11
 2299 005c 10000000 		.4byte	.LFE11
 2300 0060 00000000 		.4byte	.LFB12
 2301 0064 10000000 		.4byte	.LFE12
 2302 0068 00000000 		.4byte	.LFB13
 2303 006c 0C000000 		.4byte	.LFE13
 2304 0070 00000000 		.4byte	.LFB14
 2305 0074 0C000000 		.4byte	.LFE14
 2306 0078 00000000 		.4byte	.LFB15
 2307 007c 44000000 		.4byte	.LFE15
 2308 0080 00000000 		.4byte	.LFB16
 2309 0084 38000000 		.4byte	.LFE16
 2310 0088 00000000 		.4byte	.LFB17
 2311 008c 3C000000 		.4byte	.LFE17
 2312 0090 00000000 		.4byte	0
 2313 0094 00000000 		.4byte	0
 2314              		.section	.debug_line,"",%progbits
 2315              	.Ldebug_line0:
 2316 0000 9E020000 		.section	.debug_str,"MS",%progbits,1
 2316      02004D00 
 2316      00000201 
 2316      FB0E0D00 
 2316      01010101 
 2317              	.LASF11:
 2318 0000 75696E74 		.ascii	"uint16\000"
 2318      313600
 2319              	.LASF48:
 2320 0007 61646347 		.ascii	"adcGain\000"
 2320      61696E00 
 2321              	.LASF24:
 2322 000f 636F756E 		.ascii	"counts\000"
 2322      747300
 2323              	.LASF54:
 2324 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2324      436F756E 
 2324      7473546F 
 2324      5F566F6C 
 2324      747300
 2325              	.LASF25:
 2326 0029 4144435F 		.ascii	"ADC_Init\000"
 2326      496E6974 
 2326      00
 2327              	.LASF0:
 2328 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2328      206C6F6E 
 2328      6720756E 
 2328      7369676E 
 2328      65642069 
 2329              	.LASF29:
 2330 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2330      53746172 
 2330      74436F6E 
 2330      76657274 
 2330      00
 2331              	.LASF2:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 58


 2332 005a 6C6F6E67 		.ascii	"long long int\000"
 2332      206C6F6E 
 2332      6720696E 
 2332      7400
 2333              	.LASF4:
 2334 0068 7369676E 		.ascii	"signed char\000"
 2334      65642063 
 2334      68617200 
 2335              	.LASF31:
 2336 0074 73746174 		.ascii	"status\000"
 2336      757300
 2337              	.LASF14:
 2338 007b 696E7433 		.ascii	"int32\000"
 2338      3200
 2339              	.LASF27:
 2340 0081 4144435F 		.ascii	"ADC_Start\000"
 2340      53746172 
 2340      7400
 2341              	.LASF7:
 2342 008b 6C6F6E67 		.ascii	"long int\000"
 2342      20696E74 
 2342      00
 2343              	.LASF52:
 2344 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2344      436F756E 
 2344      7473546F 
 2344      5F75566F 
 2344      6C747300 
 2345              	.LASF58:
 2346 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2346      636F756E 
 2346      74735065 
 2346      72313056 
 2346      6F6C7400 
 2347              	.LASF10:
 2348 00bc 75696E74 		.ascii	"uint8\000"
 2348      3800
 2349              	.LASF65:
 2350 00c2 43794465 		.ascii	"CyDelayUs\000"
 2350      6C617955 
 2350      7300
 2351              	.LASF16:
 2352 00cc 646F7562 		.ascii	"double\000"
 2352      6C6500
 2353              	.LASF12:
 2354 00d3 75696E74 		.ascii	"uint32\000"
 2354      333200
 2355              	.LASF38:
 2356 00da 6D61736B 		.ascii	"mask\000"
 2356      00
 2357              	.LASF56:
 2358 00df 4144435F 		.ascii	"ADC_initVar\000"
 2358      696E6974 
 2358      56617200 
 2359              	.LASF34:
 2360 00eb 7265744D 		.ascii	"retMode\000"
 2360      6F646500 
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 59


 2361              	.LASF43:
 2362 00f3 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2362      5365744C 
 2362      696D6974 
 2362      4D61736B 
 2362      00
 2363              	.LASF9:
 2364 0104 756E7369 		.ascii	"unsigned int\000"
 2364      676E6564 
 2364      20696E74 
 2364      00
 2365              	.LASF53:
 2366 0111 75566F6C 		.ascii	"uVolts\000"
 2366      747300
 2367              	.LASF8:
 2368 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2368      20756E73 
 2368      69676E65 
 2368      6420696E 
 2368      7400
 2369              	.LASF44:
 2370 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 2370      53657453 
 2370      61744D61 
 2370      736B00
 2371              	.LASF55:
 2372 0139 766F6C74 		.ascii	"volts\000"
 2372      7300
 2373              	.LASF23:
 2374 013f 746D7052 		.ascii	"tmpRegVal\000"
 2374      65675661 
 2374      6C00
 2375              	.LASF6:
 2376 0149 73686F72 		.ascii	"short unsigned int\000"
 2376      7420756E 
 2376      7369676E 
 2376      65642069 
 2376      6E7400
 2377              	.LASF64:
 2378 015c 4379496E 		.ascii	"CyIntSetVector\000"
 2378      74536574 
 2378      56656374 
 2378      6F7200
 2379              	.LASF30:
 2380 016b 4144435F 		.ascii	"ADC_StopConvert\000"
 2380      53746F70 
 2380      436F6E76 
 2380      65727400 
 2381              	.LASF51:
 2382 017b 6D566F6C 		.ascii	"mVolts\000"
 2382      747300
 2383              	.LASF19:
 2384 0182 72656733 		.ascii	"reg32\000"
 2384      3200
 2385              	.LASF15:
 2386 0188 666C6F61 		.ascii	"float32\000"
 2386      74333200 
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 60


 2387              	.LASF21:
 2388 0190 73697A65 		.ascii	"sizetype\000"
 2388      74797065 
 2388      00
 2389              	.LASF40:
 2390 0199 6C6F774C 		.ascii	"lowLimit\000"
 2390      696D6974 
 2390      00
 2391              	.LASF41:
 2392 01a2 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2392      53657448 
 2392      6967684C 
 2392      696D6974 
 2392      00
 2393              	.LASF32:
 2394 01b3 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2394      4973456E 
 2394      64436F6E 
 2394      76657273 
 2394      696F6E00 
 2395              	.LASF17:
 2396 01c7 696E7436 		.ascii	"int64\000"
 2396      3400
 2397              	.LASF63:
 2398 01cd 4379496E 		.ascii	"CyIntSetPriority\000"
 2398      74536574 
 2398      5072696F 
 2398      72697479 
 2398      00
 2399              	.LASF37:
 2400 01de 4144435F 		.ascii	"ADC_SetChanMask\000"
 2400      53657443 
 2400      68616E4D 
 2400      61736B00 
 2401              	.LASF47:
 2402 01ee 4144435F 		.ascii	"ADC_SetGain\000"
 2402      53657447 
 2402      61696E00 
 2403              	.LASF1:
 2404 01fa 666C6F61 		.ascii	"float\000"
 2404      7400
 2405              	.LASF42:
 2406 0200 68696768 		.ascii	"highLimit\000"
 2406      4C696D69 
 2406      7400
 2407              	.LASF49:
 2408 020a 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2408      436F756E 
 2408      7473546F 
 2408      5F6D566F 
 2408      6C747300 
 2409              	.LASF39:
 2410 021e 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2410      5365744C 
 2410      6F774C69 
 2410      6D697400 
 2411              	.LASF60:
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 61


 2412 022e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2412      6E657261 
 2412      7465645F 
 2412      536F7572 
 2412      63655C50 
 2413              	.LASF5:
 2414 024d 756E7369 		.ascii	"unsigned char\000"
 2414      676E6564 
 2414      20636861 
 2414      7200
 2415              	.LASF57:
 2416 025b 4144435F 		.ascii	"ADC_offset\000"
 2416      6F666673 
 2416      657400
 2417              	.LASF3:
 2418 0266 73686F72 		.ascii	"short int\000"
 2418      7420696E 
 2418      7400
 2419              	.LASF28:
 2420 0270 4144435F 		.ascii	"ADC_Stop\000"
 2420      53746F70 
 2420      00
 2421              	.LASF22:
 2422 0279 63684E75 		.ascii	"chNum\000"
 2422      6D00
 2423              	.LASF35:
 2424 027f 6368616E 		.ascii	"chan\000"
 2424      00
 2425              	.LASF18:
 2426 0284 63686172 		.ascii	"char\000"
 2426      00
 2427              	.LASF20:
 2428 0289 63796973 		.ascii	"cyisraddress\000"
 2428      72616464 
 2428      72657373 
 2428      00
 2429              	.LASF62:
 2430 0296 4144435F 		.ascii	"ADC_channelsConfig\000"
 2430      6368616E 
 2430      6E656C73 
 2430      436F6E66 
 2430      696700
 2431              	.LASF59:
 2432 02a9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2432      4320342E 
 2432      382E3420 
 2432      32303134 
 2432      30353236 
 2433 02dc 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2433      20726576 
 2433      6973696F 
 2433      6E203231 
 2433      31333538 
 2434 030f 73202D66 		.ascii	"s -ffunction-sections\000"
 2434      66756E63 
 2434      74696F6E 
 2434      2D736563 
ARM GAS  C:\Users\Pablo\AppData\Local\Temp\cctY477n.s 			page 62


 2434      74696F6E 
 2435              	.LASF46:
 2436 0325 6F666673 		.ascii	"offset\000"
 2436      657400
 2437              	.LASF50:
 2438 032c 61646343 		.ascii	"adcCounts\000"
 2438      6F756E74 
 2438      7300
 2439              	.LASF61:
 2440 0336 433A5C55 		.ascii	"C:\\Users\\Pablo\\Projects\\EzTempRH-for-Raspberry-"
 2440      73657273 
 2440      5C506162 
 2440      6C6F5C50 
 2440      726F6A65 
 2441 0365 50695C66 		.ascii	"Pi\\firmware\\app.cydsn\000"
 2441      69726D77 
 2441      6172655C 
 2441      6170702E 
 2441      63796473 
 2442              	.LASF26:
 2443 037b 4144435F 		.ascii	"ADC_Enable\000"
 2443      456E6162 
 2443      6C6500
 2444              	.LASF13:
 2445 0386 696E7431 		.ascii	"int16\000"
 2445      3600
 2446              	.LASF45:
 2447 038c 4144435F 		.ascii	"ADC_SetOffset\000"
 2447      5365744F 
 2447      66667365 
 2447      7400
 2448              	.LASF36:
 2449 039a 72657375 		.ascii	"result\000"
 2449      6C7400
 2450              	.LASF33:
 2451 03a1 4144435F 		.ascii	"ADC_GetResult16\000"
 2451      47657452 
 2451      6573756C 
 2451      74313600 
 2452              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
